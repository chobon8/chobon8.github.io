<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>二博</title>
  
  
  <link href="https://blog.chobon.top/atom.xml" rel="self"/>
  
  <link href="https://blog.chobon.top/"/>
  <updated>2025-10-05T13:49:10.351Z</updated>
  <id>https://blog.chobon.top/</id>
  
  <author>
    <name>二博</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux磁盘坏道检测和修复</title>
    <link href="https://blog.chobon.top/posts/705c9884/"/>
    <id>https://blog.chobon.top/posts/705c9884/</id>
    <published>2025-10-05T12:46:58.000Z</published>
    <updated>2025-10-05T13:49:10.351Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在Debian 系统中，可以使用 <code>badblocks</code> 命令检测和修复磁盘坏道，检测时需在非挂载的、单用户模式下运行，并且需要root 权限。 对于物理坏道，是永久性损伤，只能通过 <code>badblocks</code> 命令进行屏蔽，避免数据读写。 对于逻辑坏道，通常通过格式化来修复，或使用 <code>fsck</code> 命令检查和修复文件系统错误。** **</p><h2 id="识别坏道类型"><a href="#识别坏道类型" class="headerlink" title="识别坏道类型"></a>识别坏道类型</h2><ul><li><p>​<strong>物理坏道</strong>​：</p><p>由磁盘物理损伤引起，例如磁头划伤，通常是不可修复的。** **</p></li><li><p>​<strong>逻辑坏道</strong>​：</p><p>由软件或文件系统错误引起，通常可以通过格式化或修复文件系统来解决</p></li></ul><h2 id="检测磁盘坏道"><a href="#检测磁盘坏道" class="headerlink" title="检测磁盘坏道"></a>检测磁盘坏道</h2><ol><li>​<strong>卸载目标分区</strong>​：在检测前，必须卸载要检测的分区，以确保数据安全，避免检测过程中的读写操作造成进一步损坏。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo umount /dev/sdXn # 将 sdXn 替换为你的分区名称，例如 /dev/sda1</span><br></pre></td></tr></table></figure><ol start="2"><li>执行 <code>badblocks</code> 命令进行只读检测：: 使用 <code>-v</code> (verbose) 和 <code>-n</code> (non-destructive read-test) 参数，执行只读检测，检查出存在问题的块。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo badblocks -v -n /dev/sdXn</span><br></pre></td></tr></table></figure><ol start="3"><li><p>执行 <code>badblocks</code> 命令进行读写检测（<em><strong>谨慎使用</strong></em>）：: 如果确定要对整个磁盘进行彻底检测，可以使用 <code>-w</code> 参数进行读写测试，但这会擦除磁盘上的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo badblocks -w -s -v -o badblocks.txt /dev/sdXn</span><br></pre></td></tr></table></figure></li></ol><ul><li><code>-w</code>: 进行写测试，这会擦除磁盘数据。</li><li><code>-s</code>: 显示进度。</li><li><code>-v</code>: 显示详细信息。</li><li><code>-o badblocks.txt</code>: 将检测到的坏块列表保存到badblocks.txt 文件。</li></ul><h2 id="修复坏道"><a href="#修复坏道" class="headerlink" title="修复坏道"></a>修复坏道</h2><p>如果不介意全部擦除就可以用上述命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo badblocks -w -s -v -o badblocks.txt /dev/sdXn</span><br></pre></td></tr></table></figure><p>否则就先备份数据，再局部修复</p><ol><li>先用dd命令对坏道数据进行备份</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd if=/dev/vda skip=417334708 of=/tmp/417334708-417334711.dat count=4</span><br></pre></td></tr></table></figure><ol start="2"><li>再对坏道读写修复</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo badblocks -s -w /dev/vda 417334711 417334708</span><br></pre></td></tr></table></figure><ol start="3"><li>检测下坏道是否已经修复</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo badblocks -w -s -v -o badblocks.txt /dev/vda</span><br></pre></td></tr></table></figure><ol start="4"><li>如果未检测出坏道，可以对备份数据进行回写</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd if=/tmp/417334708-417334711.dat of=/dev/vda seek=417334708 count=4</span><br></pre></td></tr></table></figure><ol start="5"><li>如果坏道经过读写修复依然存在，那么只能通过屏蔽，使系统不再使用</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkfs -l badblocks.txt /dev/vda</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;在Debian 系统中，可以使用 &lt;code&gt;badblocks&lt;/code&gt; 命令检测和修复磁盘坏道，检测时需在非挂载的、单用户模式下运行</summary>
      
    
    
    
    <category term="Linux" scheme="https://blog.chobon.top/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://blog.chobon.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Proxmox上LXC磁盘缩小</title>
    <link href="https://blog.chobon.top/posts/dfeb25f1/"/>
    <id>https://blog.chobon.top/posts/dfeb25f1/</id>
    <published>2024-05-15T11:46:58.000Z</published>
    <updated>2025-10-05T13:49:10.351Z</updated>
    
    <content type="html"><![CDATA[<h1 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h1><blockquote><p>查看lxc容器列表</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pct list</span><br></pre></td></tr></table></figure><blockquote><p>停止lxc容器</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pct stop 100</span><br></pre></td></tr></table></figure><blockquote><p>执行容器系统文件检查</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">e2fsck -fy /var/lib/vz/images/100/vm-100-disk-0.raw</span><br></pre></td></tr></table></figure><blockquote><p>调整文件系统</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resize2fs /var/lib/vz/images/100/vm-100-disk-0.raw 100G</span><br></pre></td></tr></table></figure><blockquote><p>修改lxc容器配置，设置磁盘大小为调整后大小</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rootfs: local:100/vm-100-disk-0.raw,size=100G</span></span><br><span class="line">vi /etc/pve/lxc/100.conf</span><br></pre></td></tr></table></figure><blockquote><p>启动lxc容器</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pct start 100</span><br></pre></td></tr></table></figure><blockquote><p>进入lxc容器，查看磁盘信息</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pct enter 100</span><br><span class="line"><span class="built_in">df</span> -h</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;命令&quot;&gt;&lt;a href=&quot;#命令&quot; class=&quot;headerlink&quot; title=&quot;命令&quot;&gt;&lt;/a&gt;命令&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;查看lxc容器列表&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight bash</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Proxmox" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Proxmox/"/>
    
    
    <category term="Linux" scheme="https://blog.chobon.top/tags/Linux/"/>
    
    <category term="Proxmox" scheme="https://blog.chobon.top/tags/Proxmox/"/>
    
  </entry>
  
  <entry>
    <title>RKE搭建Kubernetes集群环境</title>
    <link href="https://blog.chobon.top/posts/a594add/"/>
    <id>https://blog.chobon.top/posts/a594add/</id>
    <published>2022-03-08T14:22:08.000Z</published>
    <updated>2025-10-05T13:49:10.351Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>由于rancher的一个<a href="https://github.com/rancher/rancher/issues/24910">bug</a>，导致无法通过docker形式安装，于是采用RKE方式。查看rancher的文档，了解到RKE相对比较简单</p><p><em><strong>注意</strong></em><br><em><strong>由于PVE的LXC不支持k8s，最终采用VM</strong></em></p><h2 id="系统准备"><a href="#系统准备" class="headerlink" title="系统准备"></a>系统准备</h2><p>操作系统：Debian***</p><p>软件环境</p><table><thead><tr><th>软件</th><th>版本</th></tr></thead><tbody><tr><td><strong>docker</strong></td><td><strong>20.10.12</strong></td></tr><tr><td><strong>操作系统</strong></td><td><strong>Debian</strong></td></tr><tr><td><strong>Kubernetes</strong></td><td><strong>v1.22.6</strong></td></tr></tbody></table><p>服务器</p><table><thead><tr><th>角色</th><th>ip</th><th>role</th></tr></thead><tbody><tr><td>host</td><td>192.168.1.200</td><td>controlplane、rancher、rke</td></tr><tr><td>master</td><td>192.168.1.201</td><td>controlplane、etc</td></tr><tr><td>worker1</td><td>192.168.1.202</td><td>worker</td></tr><tr><td>worker2</td><td>192.168.1.203</td><td>worker</td></tr><tr><td>worker3</td><td>192.168.1.204</td><td>worker</td></tr></tbody></table><blockquote><p>系统软件更新</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">debian@debian:~# <span class="built_in">sudo</span> apt-get update -y</span><br><span class="line">...</span><br><span class="line">debian@debian:~# <span class="built_in">sudo</span> apt-get upgrade -y</span><br></pre></td></tr></table></figure><blockquote><p>安装基础软件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">debian@debian:~# <span class="built_in">sudo</span> apt-get install \ </span><br><span class="line">    apt-transport-https \</span><br><span class="line">    ca-certificates \</span><br><span class="line">    curl \</span><br><span class="line">    gnupg2 \</span><br><span class="line">    software-properties-common -y</span><br></pre></td></tr></table></figure><blockquote><p>添加 Docker GPG 密钥</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">debian@debian:~# <span class="built_in">sudo</span> curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/debian/gpg | <span class="built_in">sudo</span> apt-key add -</span><br></pre></td></tr></table></figure><blockquote><p>设置docker稳定版仓库</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">debian@debian:~# <span class="built_in">sudo</span> add-apt-repository \</span><br><span class="line">   <span class="string">&quot;deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/debian \</span></span><br><span class="line"><span class="string">    <span class="subst">$(lsb_release -cs)</span> stable&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>安装docker</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">debian@debian:~# <span class="built_in">sudo</span> apt-get install -y docker-ce</span><br><span class="line">debian@debian:~# <span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> docker</span><br><span class="line">debian@debian:~# <span class="built_in">sudo</span> systemctl start docker</span><br></pre></td></tr></table></figure><blockquote><p>创建用户、登录文件夹、文件夹权限</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">debian@debian:~# useradd -g docker docker</span><br><span class="line"></span><br><span class="line">debian@debian:~# <span class="built_in">mkdir</span> /home/docker</span><br><span class="line">debian@debian:~# <span class="built_in">chown</span> -R docker /home/docker</span><br><span class="line">debian@debian:~# passwd docker <span class="comment">#设置docker密码</span></span><br></pre></td></tr></table></figure><h2 id="准备安装"><a href="#准备安装" class="headerlink" title="准备安装"></a>准备安装</h2><p>在一台可以访问所有机器的设备上创建</p><blockquote><p>k8s集群设备ssh免密登录</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">debian@debian:~# ssh-keygen -t rsa</span><br><span class="line">debian@debian:~# ssh-copy-id docker@192.168.1.201</span><br><span class="line">debian@debian:~# ssh-copy-id docker@192.168.1.202</span><br><span class="line">debian@debian:~# ssh-copy-id docker@192.168.1.203</span><br><span class="line">debian@debian:~# ssh-copy-id docker@192.168.1.204</span><br></pre></td></tr></table></figure><h2 id="部署集群"><a href="#部署集群" class="headerlink" title="部署集群"></a>部署集群</h2><blockquote><p>下载RKE工具</p></blockquote><p>本机是debian，下载adm64版本即可，<a href="https://github.com/rancher/rke/releases/download/v1.3.7/rke_linux-amd64">v1.3.7</a>。</p><blockquote><p>执行权限</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">debian@debian:~# <span class="built_in">chmod</span> +x rke_linux-amd64</span><br></pre></td></tr></table></figure><blockquote><p>配置kubernetes集群</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">debian@debian:~# ./rke_linux-amd64 config</span><br></pre></td></tr></table></figure><p>配置好以后会生成一个yml文件，<code>cluster.yml</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">debian@debian:~# <span class="built_in">ls</span></span><br><span class="line">cluster.yml rke_linux-amd64</span><br></pre></td></tr></table></figure><blockquote><p>配置文件内容</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># If you intended to deploy Kubernetes in an air-gapped environment,</span></span><br><span class="line"><span class="comment"># please consult the documentation on how to configure custom RKE images.</span></span><br><span class="line"><span class="attr">nodes:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">address:</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.201</span></span><br><span class="line">  <span class="attr">port:</span> <span class="string">&quot;22&quot;</span></span><br><span class="line">  <span class="attr">internal_address:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">role:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">controlplane</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">etcd</span></span><br><span class="line">  <span class="attr">hostname_override:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">docker</span></span><br><span class="line">  <span class="attr">docker_socket:</span> <span class="string">/var/run/docker.sock</span></span><br><span class="line">  <span class="attr">ssh_key:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">ssh_key_path:</span> <span class="string">~/.ssh/id_rsa</span></span><br><span class="line">  <span class="attr">ssh_cert:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">ssh_cert_path:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">labels:</span> &#123;&#125;</span><br><span class="line">  <span class="attr">taints:</span> []</span><br><span class="line"><span class="bullet">-</span> <span class="attr">address:</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.202</span></span><br><span class="line">  <span class="attr">port:</span> <span class="string">&quot;22&quot;</span></span><br><span class="line">  <span class="attr">internal_address:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">role:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">worker</span></span><br><span class="line">  <span class="attr">hostname_override:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">docker</span></span><br><span class="line">  <span class="attr">docker_socket:</span> <span class="string">/var/run/docker.sock</span></span><br><span class="line">  <span class="attr">ssh_key:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">ssh_key_path:</span> <span class="string">~/.ssh/id_rsa</span></span><br><span class="line">  <span class="attr">ssh_cert:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">ssh_cert_path:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">labels:</span> &#123;&#125;</span><br><span class="line">  <span class="attr">taints:</span> []</span><br><span class="line"><span class="bullet">-</span> <span class="attr">address:</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.203</span></span><br><span class="line">  <span class="attr">port:</span> <span class="string">&quot;22&quot;</span></span><br><span class="line">  <span class="attr">internal_address:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">role:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">worker</span></span><br><span class="line">  <span class="attr">hostname_override:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">docker</span></span><br><span class="line">  <span class="attr">docker_socket:</span> <span class="string">/var/run/docker.sock</span></span><br><span class="line">  <span class="attr">ssh_key:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">ssh_key_path:</span> <span class="string">~/.ssh/id_rsa</span></span><br><span class="line">  <span class="attr">ssh_cert:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">ssh_cert_path:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">labels:</span> &#123;&#125;</span><br><span class="line">  <span class="attr">taints:</span> []</span><br><span class="line"><span class="bullet">-</span> <span class="attr">address:</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.204</span></span><br><span class="line">  <span class="attr">port:</span> <span class="string">&quot;22&quot;</span></span><br><span class="line">  <span class="attr">internal_address:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">role:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">worker</span></span><br><span class="line">  <span class="attr">hostname_override:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">docker</span></span><br><span class="line">  <span class="attr">docker_socket:</span> <span class="string">/var/run/docker.sock</span></span><br><span class="line">  <span class="attr">ssh_key:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">ssh_key_path:</span> <span class="string">~/.ssh/id_rsa</span></span><br><span class="line">  <span class="attr">ssh_cert:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">ssh_cert_path:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">labels:</span> &#123;&#125;</span><br><span class="line">  <span class="attr">taints:</span> []</span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">etcd:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">extra_args:</span> &#123;&#125;</span><br><span class="line">    <span class="attr">extra_binds:</span> []</span><br><span class="line">    <span class="attr">extra_env:</span> []</span><br><span class="line">    <span class="attr">win_extra_args:</span> &#123;&#125;</span><br><span class="line">    <span class="attr">win_extra_binds:</span> []</span><br><span class="line">    <span class="attr">win_extra_env:</span> []</span><br><span class="line">    <span class="attr">external_urls:</span> []</span><br><span class="line">    <span class="attr">ca_cert:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">cert:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">key:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">uid:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">gid:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">snapshot:</span> <span class="literal">null</span></span><br><span class="line">    <span class="attr">retention:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">creation:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">backup_config:</span> <span class="literal">null</span></span><br><span class="line">  <span class="attr">kube-api:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">extra_args:</span> &#123;&#125;</span><br><span class="line">    <span class="attr">extra_binds:</span> []</span><br><span class="line">    <span class="attr">extra_env:</span> []</span><br><span class="line">    <span class="attr">win_extra_args:</span> &#123;&#125;</span><br><span class="line">    <span class="attr">win_extra_binds:</span> []</span><br><span class="line">    <span class="attr">win_extra_env:</span> []</span><br><span class="line">    <span class="attr">service_cluster_ip_range:</span> <span class="number">10.43</span><span class="number">.0</span><span class="number">.0</span><span class="string">/16</span></span><br><span class="line">    <span class="attr">service_node_port_range:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">pod_security_policy:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">always_pull_images:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">secrets_encryption_config:</span> <span class="literal">null</span></span><br><span class="line">    <span class="attr">audit_log:</span> <span class="literal">null</span></span><br><span class="line">    <span class="attr">admission_configuration:</span> <span class="literal">null</span></span><br><span class="line">    <span class="attr">event_rate_limit:</span> <span class="literal">null</span></span><br><span class="line">  <span class="attr">kube-controller:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">extra_args:</span> &#123;&#125;</span><br><span class="line">    <span class="attr">extra_binds:</span> []</span><br><span class="line">    <span class="attr">extra_env:</span> []</span><br><span class="line">    <span class="attr">win_extra_args:</span> &#123;&#125;</span><br><span class="line">    <span class="attr">win_extra_binds:</span> []</span><br><span class="line">    <span class="attr">win_extra_env:</span> []</span><br><span class="line">    <span class="attr">cluster_cidr:</span> <span class="number">10.42</span><span class="number">.0</span><span class="number">.0</span><span class="string">/16</span></span><br><span class="line">    <span class="attr">service_cluster_ip_range:</span> <span class="number">10.43</span><span class="number">.0</span><span class="number">.0</span><span class="string">/16</span></span><br><span class="line">  <span class="attr">scheduler:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">extra_args:</span> &#123;&#125;</span><br><span class="line">    <span class="attr">extra_binds:</span> []</span><br><span class="line">    <span class="attr">extra_env:</span> []</span><br><span class="line">    <span class="attr">win_extra_args:</span> &#123;&#125;</span><br><span class="line">    <span class="attr">win_extra_binds:</span> []</span><br><span class="line">    <span class="attr">win_extra_env:</span> []</span><br><span class="line">  <span class="attr">kubelet:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">extra_args:</span> &#123;&#125;</span><br><span class="line">    <span class="attr">extra_binds:</span> []</span><br><span class="line">    <span class="attr">extra_env:</span> []</span><br><span class="line">    <span class="attr">win_extra_args:</span> &#123;&#125;</span><br><span class="line">    <span class="attr">win_extra_binds:</span> []</span><br><span class="line">    <span class="attr">win_extra_env:</span> []</span><br><span class="line">    <span class="attr">cluster_domain:</span> <span class="string">cluster.local</span></span><br><span class="line">    <span class="attr">infra_container_image:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">cluster_dns_server:</span> <span class="number">10.43</span><span class="number">.0</span><span class="number">.10</span></span><br><span class="line">    <span class="attr">fail_swap_on:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">generate_serving_certificate:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">kubeproxy:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="attr">extra_args:</span> &#123;&#125;</span><br><span class="line">    <span class="attr">extra_binds:</span> []</span><br><span class="line">    <span class="attr">extra_env:</span> []</span><br><span class="line">    <span class="attr">win_extra_args:</span> &#123;&#125;</span><br><span class="line">    <span class="attr">win_extra_binds:</span> []</span><br><span class="line">    <span class="attr">win_extra_env:</span> []</span><br><span class="line"><span class="attr">network:</span></span><br><span class="line">  <span class="attr">plugin:</span> <span class="string">canal</span></span><br><span class="line">  <span class="attr">options:</span> &#123;&#125;</span><br><span class="line">  <span class="attr">mtu:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">node_selector:</span> &#123;&#125;</span><br><span class="line">  <span class="attr">update_strategy:</span> <span class="literal">null</span></span><br><span class="line">  <span class="attr">tolerations:</span> []</span><br><span class="line"><span class="attr">authentication:</span></span><br><span class="line">  <span class="attr">strategy:</span> <span class="string">x509</span></span><br><span class="line">  <span class="attr">sans:</span> []</span><br><span class="line">  <span class="attr">webhook:</span> <span class="literal">null</span></span><br><span class="line"><span class="attr">addons:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="attr">addons_include:</span> []</span><br><span class="line"><span class="attr">system_images:</span></span><br><span class="line">  <span class="attr">etcd:</span> <span class="string">rancher/mirrored-coreos-etcd:v3.5.2</span></span><br><span class="line">  <span class="attr">alpine:</span> <span class="string">rancher/rke-tools:v0.1.79</span></span><br><span class="line">  <span class="attr">nginx_proxy:</span> <span class="string">rancher/rke-tools:v0.1.79</span></span><br><span class="line">  <span class="attr">cert_downloader:</span> <span class="string">rancher/rke-tools:v0.1.79</span></span><br><span class="line">  <span class="attr">kubernetes_services_sidecar:</span> <span class="string">rancher/rke-tools:v0.1.79</span></span><br><span class="line">  <span class="attr">kubedns:</span> <span class="string">rancher/mirrored-k8s-dns-node-cache:1.21.1</span></span><br><span class="line">  <span class="attr">dnsmasq:</span> <span class="string">rancher/mirrored-k8s-dns-dnsmasq-nanny:1.21.1</span></span><br><span class="line">  <span class="attr">kubedns_sidecar:</span> <span class="string">rancher/mirrored-k8s-dns-sidecar:1.21.1</span></span><br><span class="line">  <span class="attr">kubedns_autoscaler:</span> <span class="string">rancher/mirrored-cluster-proportional-autoscaler:1.8.5</span></span><br><span class="line">  <span class="attr">coredns:</span> <span class="string">coredns/coredns:1.9.0</span></span><br><span class="line">  <span class="attr">coredns_autoscaler:</span> <span class="string">rancher/mirrored-cluster-proportional-autoscaler:1.8.5</span></span><br><span class="line">  <span class="attr">nodelocal:</span> <span class="string">rancher/mirrored-k8s-dns-node-cache:1.21.1</span></span><br><span class="line">  <span class="attr">kubernetes:</span> <span class="string">rancher/hyperkube:v1.23.4-rancher1</span></span><br><span class="line">  <span class="attr">flannel:</span> <span class="string">rancher/mirrored-coreos-flannel:v0.15.1</span></span><br><span class="line">  <span class="attr">flannel_cni:</span> <span class="string">rancher/flannel-cni:v0.3.0-rancher6</span></span><br><span class="line">  <span class="attr">calico_node:</span> <span class="string">rancher/mirrored-calico-node:v3.22.0</span></span><br><span class="line">  <span class="attr">calico_cni:</span> <span class="string">rancher/mirrored-calico-cni:v3.22.0</span></span><br><span class="line">  <span class="attr">calico_controllers:</span> <span class="string">rancher/mirrored-calico-kube-controllers:v3.22.0</span></span><br><span class="line">  <span class="attr">calico_ctl:</span> <span class="string">rancher/mirrored-calico-ctl:v3.22.0</span></span><br><span class="line">  <span class="attr">calico_flexvol:</span> <span class="string">rancher/mirrored-calico-pod2daemon-flexvol:v3.22.0</span></span><br><span class="line">  <span class="attr">canal_node:</span> <span class="string">rancher/mirrored-calico-node:v3.22.0</span></span><br><span class="line">  <span class="attr">canal_cni:</span> <span class="string">rancher/mirrored-calico-cni:v3.22.0</span></span><br><span class="line">  <span class="attr">canal_controllers:</span> <span class="string">rancher/mirrored-calico-kube-controllers:v3.22.0</span></span><br><span class="line">  <span class="attr">canal_flannel:</span> <span class="string">rancher/mirrored-coreos-flannel:v0.15.1</span></span><br><span class="line">  <span class="attr">canal_flexvol:</span> <span class="string">rancher/mirrored-calico-pod2daemon-flexvol:v3.22.0</span></span><br><span class="line">  <span class="attr">weave_node:</span> <span class="string">weaveworks/weave-kube:2.8.1</span></span><br><span class="line">  <span class="attr">weave_cni:</span> <span class="string">weaveworks/weave-npc:2.8.1</span></span><br><span class="line">  <span class="attr">pod_infra_container:</span> <span class="string">rancher/mirrored-pause:3.6</span></span><br><span class="line">  <span class="attr">ingress:</span> <span class="string">rancher/nginx-ingress-controller:nginx-1.1.1-rancher1</span></span><br><span class="line">  <span class="attr">ingress_backend:</span> <span class="string">rancher/mirrored-nginx-ingress-controller-defaultbackend:1.5-rancher1</span></span><br><span class="line">  <span class="attr">ingress_webhook:</span> <span class="string">rancher/mirrored-ingress-nginx-kube-webhook-certgen:v1.1.1</span></span><br><span class="line">  <span class="attr">metrics_server:</span> <span class="string">rancher/mirrored-metrics-server:v0.6.1</span></span><br><span class="line">  <span class="attr">windows_pod_infra_container:</span> <span class="string">rancher/kubelet-pause:v0.1.6</span></span><br><span class="line">  <span class="attr">aci_cni_deploy_container:</span> <span class="string">noiro/cnideploy:5.1.1.0.1ae238a</span></span><br><span class="line">  <span class="attr">aci_host_container:</span> <span class="string">noiro/aci-containers-host:5.1.1.0.1ae238a</span></span><br><span class="line">  <span class="attr">aci_opflex_container:</span> <span class="string">noiro/opflex:5.1.1.0.1ae238a</span></span><br><span class="line">  <span class="attr">aci_mcast_container:</span> <span class="string">noiro/opflex:5.1.1.0.1ae238a</span></span><br><span class="line">  <span class="attr">aci_ovs_container:</span> <span class="string">noiro/openvswitch:5.1.1.0.1ae238a</span></span><br><span class="line">  <span class="attr">aci_controller_container:</span> <span class="string">noiro/aci-containers-controller:5.1.1.0.1ae238a</span></span><br><span class="line">  <span class="attr">aci_gbp_server_container:</span> <span class="string">noiro/gbp-server:5.1.1.0.1ae238a</span></span><br><span class="line">  <span class="attr">aci_opflex_server_container:</span> <span class="string">noiro/opflex-server:5.1.1.0.1ae238a</span></span><br><span class="line"><span class="attr">ssh_key_path:</span> <span class="string">~/.ssh/id_rsa</span></span><br><span class="line"><span class="attr">ssh_cert_path:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="attr">ssh_agent_auth:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">authorization:</span></span><br><span class="line">  <span class="attr">mode:</span> <span class="string">rbac</span></span><br><span class="line">  <span class="attr">options:</span> &#123;&#125;</span><br><span class="line"><span class="attr">ignore_docker_version:</span> <span class="literal">null</span></span><br><span class="line"><span class="attr">enable_cri_dockerd:</span> <span class="literal">null</span></span><br><span class="line"><span class="attr">kubernetes_version:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="attr">private_registries:</span> []</span><br><span class="line"><span class="attr">ingress:</span></span><br><span class="line">  <span class="attr">provider:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">options:</span> &#123;&#125;</span><br><span class="line">  <span class="attr">node_selector:</span> &#123;&#125;</span><br><span class="line">  <span class="attr">extra_args:</span> &#123;&#125;</span><br><span class="line">  <span class="attr">dns_policy:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">extra_envs:</span> []</span><br><span class="line">  <span class="attr">extra_volumes:</span> []</span><br><span class="line">  <span class="attr">extra_volume_mounts:</span> []</span><br><span class="line">  <span class="attr">update_strategy:</span> <span class="literal">null</span></span><br><span class="line">  <span class="attr">http_port:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">https_port:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">network_mode:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">tolerations:</span> []</span><br><span class="line">  <span class="attr">default_backend:</span> <span class="literal">null</span></span><br><span class="line">  <span class="attr">default_http_backend_priority_class_name:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">nginx_ingress_controller_priority_class_name:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">default_ingress_class:</span> <span class="literal">null</span></span><br><span class="line"><span class="attr">cluster_name:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="attr">cloud_provider:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="attr">prefix_path:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="attr">win_prefix_path:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="attr">addon_job_timeout:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">bastion_host:</span></span><br><span class="line">  <span class="attr">address:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">port:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">ssh_key:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">ssh_key_path:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">ssh_cert:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">ssh_cert_path:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">ignore_proxy_env_vars:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">monitoring:</span></span><br><span class="line">  <span class="attr">provider:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">options:</span> &#123;&#125;</span><br><span class="line">  <span class="attr">node_selector:</span> &#123;&#125;</span><br><span class="line">  <span class="attr">update_strategy:</span> <span class="literal">null</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="literal">null</span></span><br><span class="line">  <span class="attr">tolerations:</span> []</span><br><span class="line">  <span class="attr">metrics_server_priority_class_name:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="attr">restore:</span></span><br><span class="line">  <span class="attr">restore:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">snapshot_name:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="attr">rotate_encryption_key:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">dns:</span> <span class="literal">null</span></span><br></pre></td></tr></table></figure><blockquote><p>启动安装</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">debian@debian:~# ./rke_linux-amd64 up</span><br></pre></td></tr></table></figure><blockquote><p>等待执行完</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">debian@debian:~# INFO[0465] Finished building Kubernetes cluster successfully </span><br></pre></td></tr></table></figure><h2 id="安装kubectl"><a href="#安装kubectl" class="headerlink" title="安装kubectl"></a>安装kubectl</h2><blockquote><p>下载kubernetes签名秘钥</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">debian@debian:~# curl https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add - </span><br></pre></td></tr></table></figure><blockquote><p>添加kubernetes apt仓库</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">debian@debian:~# <span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; /etc/apt/sources.list.d/kubernetes.list</span></span><br><span class="line"><span class="string">deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><blockquote><p>更新apt包</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">debian@debian:~# <span class="built_in">sudo</span> apt-get update -y</span><br></pre></td></tr></table></figure><blockquote><p>安装kubectl</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">debian@debian:~# <span class="built_in">sudo</span> apt-get install -y kubectl</span><br></pre></td></tr></table></figure><blockquote><p>kubectl设置集群</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">debian@debian:~# <span class="built_in">mkdir</span> ~/.kube</span><br><span class="line">debian@debian:~# <span class="built_in">cp</span> kube_config_cluster.yml ~/.kube/config</span><br></pre></td></tr></table></figure><blockquote><p>查看k8s节点</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">debian@debian:~# kubectl get nodes</span><br><span class="line">NAME            STATUS   ROLES               AGE   VERSION</span><br><span class="line">192.168.1.201   Ready    controlplane,etcd   31m   v1.23.4</span><br><span class="line">192.168.1.202   Ready    worker              31m   v1.23.4</span><br><span class="line">192.168.1.203   Ready    worker              31m   v1.23.4</span><br><span class="line">192.168.1.204   Ready    worker              31m   v1.23.4</span><br></pre></td></tr></table></figure><h2 id="移除k8s集群"><a href="#移除k8s集群" class="headerlink" title="移除k8s集群"></a>移除k8s集群</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">debian@debian:~# ./rke_linux-amd64 remove</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;由于rancher的一个&lt;a href=&quot;https://github.com/rancher/rancher/issues/24910&quot;&gt;</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Kubernetes" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Kubernetes/"/>
    
    
    <category term="Docker" scheme="https://blog.chobon.top/tags/Docker/"/>
    
    <category term="Kubernetes" scheme="https://blog.chobon.top/tags/Kubernetes/"/>
    
    <category term="Rancher" scheme="https://blog.chobon.top/tags/Rancher/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu安装Docker</title>
    <link href="https://blog.chobon.top/posts/bc681fc7/"/>
    <id>https://blog.chobon.top/posts/bc681fc7/</id>
    <published>2021-12-02T15:07:41.000Z</published>
    <updated>2025-10-05T13:49:10.352Z</updated>
    
    <content type="html"><![CDATA[<h2 id="其他系统版本"><a href="#其他系统版本" class="headerlink" title="其他系统版本"></a>其他系统版本</h2><p><a href="../d4c19f1a">CentOS安装Docker</a></p><p>不同版本只是安装包命令不同而已</p><h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h2><p>更新系统包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# sudo apt-get update</span><br></pre></td></tr></table></figure><p>安装需要安装的工具包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common &amp;&amp; curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -</span><br></pre></td></tr></table></figure><p>配置apt源安装docker源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# sudo add-apt-repository &quot;deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable&quot; &amp;&amp; sudo apt-get update </span><br></pre></td></tr></table></figure><p>安装Docker</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# sudo apt-get install -y docker-ce</span><br></pre></td></tr></table></figure><p>创建daemon配置文件<code>/etc/docker/daemon.json</code>来使用加速器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# sudo mkdir -p /etc/docker</span><br><span class="line">root@ubuntu:~# sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://lo831hm4.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">root@ubuntu:~# sudo systemctl daemon-reload</span><br><span class="line">root@ubuntu:~# sudo systemctl restart docker</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;其他系统版本&quot;&gt;&lt;a href=&quot;#其他系统版本&quot; class=&quot;headerlink&quot; title=&quot;其他系统版本&quot;&gt;&lt;/a&gt;其他系统版本&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;../d4c19f1a&quot;&gt;CentOS安装Docker&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;不同版本只是</summary>
      
    
    
    
    <category term="Linux" scheme="https://blog.chobon.top/categories/Linux/"/>
    
    <category term="Ubuntu" scheme="https://blog.chobon.top/categories/Linux/Ubuntu/"/>
    
    
    <category term="Docker" scheme="https://blog.chobon.top/tags/Docker/"/>
    
    <category term="Ubuntu" scheme="https://blog.chobon.top/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>V2ray更新gRPC</title>
    <link href="https://blog.chobon.top/posts/da975915/"/>
    <id>https://blog.chobon.top/posts/da975915/</id>
    <published>2021-11-30T10:15:45.000Z</published>
    <updated>2025-10-05T13:49:10.352Z</updated>
    
    <content type="html"><![CDATA[<h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><p>V2ray开始支持gRPC作为底层传输方式，各位大佬已经上车了，于是打算尝尝鲜。<br>由于墙外VPS是Ubuntu 14.04，Nginx版本低于1.13.10，没法使用gRPC。升级Nginx看<a href="../ca8752b5">上一篇</a></p><h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><h3 id="V2ray服务端配置"><a href="#V2ray服务端配置" class="headerlink" title="V2ray服务端配置"></a>V2ray服务端配置</h3><p>查阅V2ray的<a href="https://www.v2fly.org/config/transport/grpc.html#grpcobject">gRpc配置</a>。</p><p>关闭V2ray服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@vultr:~# service v2ray stop</span><br></pre></td></tr></table></figure><p>修改V2ray配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;inbounds&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;port&quot;</span><span class="punctuation">:</span> <span class="number">12345</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;protocol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vmess&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;settings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;clients&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;712df412-9afa-49d8-8309-f969313de504&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;streamSettings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;network&quot;</span><span class="punctuation">:</span><span class="string">&quot;grpc&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;grpcSettings&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;serviceName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#gRpcService#&quot;</span> <span class="comment">//nginx转发的gRPC服务名</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;listen&quot;</span><span class="punctuation">:</span> <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>启动V2ray</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@vultr:~# service v2ray start</span><br></pre></td></tr></table></figure><h3 id="Nginx配置"><a href="#Nginx配置" class="headerlink" title="Nginx配置"></a>Nginx配置</h3><p>Nginx原来的配置不变，修改<code>location</code>节点下</p><p>关闭Nginx服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@vultr:~# service nginx stop</span><br></pre></td></tr></table></figure><p>修改Nginx配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    #常规配置</span><br><span class="line">    location /GunService &#123;</span><br><span class="line">        #gRpc的其他配置</span><br><span class="line">        grpc_pass grpc://127.0.0.1:12345</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动Nginx服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@vultr:~# service nginx start</span><br></pre></td></tr></table></figure><h3 id="V2ray客户端配置"><a href="#V2ray客户端配置" class="headerlink" title="V2ray客户端配置"></a>V2ray客户端配置</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;outbound&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;streamSettings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;network&quot;</span><span class="punctuation">:</span> <span class="string">&quot;grpc&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;security&quot;</span><span class="punctuation">:</span><span class="string">&quot;tls&quot;</span><span class="punctuation">,</span> <span class="comment">//如果连接采用https，这里需要用tls，以及配置tlsSettings</span></span><br><span class="line">            <span class="attr">&quot;tlsSettings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;allowInsecure&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;serverName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#Domain#&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;tcpSettings&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;kcpSettings&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;wsSettings&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;grpcSettings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;serviceName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#gRpcService#&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;multiMode&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;httpSettings&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;场景&quot;&gt;&lt;a href=&quot;#场景&quot; class=&quot;headerlink&quot; title=&quot;场景&quot;&gt;&lt;/a&gt;场景&lt;/h2&gt;&lt;p&gt;V2ray开始支持gRPC作为底层传输方式，各位大佬已经上车了，于是打算尝尝鲜。&lt;br&gt;由于墙外VPS是Ubuntu 14.04，Nginx</summary>
      
    
    
    
    <category term="V2ray" scheme="https://blog.chobon.top/categories/V2ray/"/>
    
    
    <category term="V2ray" scheme="https://blog.chobon.top/tags/V2ray/"/>
    
    <category term="gRPC" scheme="https://blog.chobon.top/tags/gRPC/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 16.04升级Nginx</title>
    <link href="https://blog.chobon.top/posts/ca8752b5/"/>
    <id>https://blog.chobon.top/posts/ca8752b5/</id>
    <published>2021-11-29T14:51:45.000Z</published>
    <updated>2025-10-05T13:49:10.352Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>Ubuntu直接用<code>apt-get install nginx</code>命令更新只能升级到1.10.3版本，无法使用Http2和Grpc。</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>先在<code>/etc/apt/sources.list</code>添加下面两行</p><blockquote><p>Debian</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">deb http://nginx.org/packages/debian/ squeeze nginx</span><br><span class="line">deb-src http://nginx.org/packages/debian/ squeeze nginx</span><br></pre></td></tr></table></figure><blockquote><p>Ubuntu</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">deb http://nginx.org/packages/ubuntu/ lucid nginx</span><br><span class="line">deb-src http://nginx.org/packages/ubuntu/ lucid nginx</span><br></pre></td></tr></table></figure><p>然后 apt-get install nginx 就可以</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;Ubuntu直接用&lt;code&gt;apt-get install nginx&lt;/code&gt;命令更新只能升级到1.10.3版本，无法使用Http2</summary>
      
    
    
    
    <category term="Linux" scheme="https://blog.chobon.top/categories/Linux/"/>
    
    <category term="Ubuntu" scheme="https://blog.chobon.top/categories/Linux/Ubuntu/"/>
    
    
    <category term="Ubuntu" scheme="https://blog.chobon.top/tags/Ubuntu/"/>
    
    <category term="Nginx" scheme="https://blog.chobon.top/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Linux Page Cache占用回收</title>
    <link href="https://blog.chobon.top/posts/5386e490/"/>
    <id>https://blog.chobon.top/posts/5386e490/</id>
    <published>2021-11-29T04:15:58.000Z</published>
    <updated>2025-10-05T13:49:10.351Z</updated>
    
    <content type="html"><![CDATA[<h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><p>Linux系统经常内存占用到90%，查看后发现是Page Cache占用绝大多，遂查看Page Cache在Linux系统内是啥用。原来是Linux读取文件时，用于缓存文件的逻辑内容，从而加快对磁盘上的映像和数据的访问。</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><ul><li>仅清除页面缓存（PageCache）<ul><li><code>echo 1 &gt; /proc/sys/vm/drop_caches</code></li></ul></li><li>清除目录项和inode<ul><li><code>echo 2 &gt; /proc/sys/vm/drop_caches</code></li></ul></li><li>清除页面缓存，目录项和inode<ul><li><code>echo 3 &gt; /proc/sys/vm/drop_caches</code></li></ul></li></ul><p>简单粗暴直接采用<code>echo 3 &gt; /proc/sys/vm/drop_caches</code>。</p><p>可以写个定时清除缓存的脚本，当然想要获得更好的体验就需要做更多的设置。</p><blockquote><p>创建文件</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#clearcache.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;echo 3 &gt; /proc/sys/vm/drop_caches&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>设置文件权限</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># chmod 755 clearcache.sh</span></span><br></pre></td></tr></table></figure><blockquote><p>设置定时任务</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># crontab -e</span></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0  2  *  *  *  /path/to/clearcache.sh</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;场景&quot;&gt;&lt;a href=&quot;#场景&quot; class=&quot;headerlink&quot; title=&quot;场景&quot;&gt;&lt;/a&gt;场景&lt;/h2&gt;&lt;p&gt;Linux系统经常内存占用到90%，查看后发现是Page Cache占用绝大多，遂查看Page Cache在Linux系统内是啥用。原来是L</summary>
      
    
    
    
    <category term="Linux" scheme="https://blog.chobon.top/categories/Linux/"/>
    
    
    <category term="Linux" scheme="https://blog.chobon.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Dmesg命令</title>
    <link href="https://blog.chobon.top/posts/6ea30e9a/"/>
    <id>https://blog.chobon.top/posts/6ea30e9a/</id>
    <published>2021-11-20T09:10:45.000Z</published>
    <updated>2025-10-05T13:49:10.350Z</updated>
    
    <content type="html"><![CDATA[<h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><p>Linux dmesg (英文全称：display message) 用于显示开机信息。<br>kernel会将开机信息存储在ring buffer中。若是在开机时来不及查看信息，可利用dmesg命令来查看。开机信息会保存在&#x2F;var&#x2F;log目录下，名称为dmesg的中文件中。</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><blockquote><p>dmesg [-cn] [-s &lt;缓存区大小&gt;]</p></blockquote><h3 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h3><ul><li><code>-c</code> <ul><li>显示信息后，清楚ring buffer中的内容。</li></ul></li><li><code>-s &lt;缓存区大小&gt;</code><ul><li>预设置为8196，刚好等于ring buffer的大小。</li></ul></li><li><code>-n</code><ul><li>设置记录信息的层级。</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;命令&quot;&gt;&lt;a href=&quot;#命令&quot; class=&quot;headerlink&quot; title=&quot;命令&quot;&gt;&lt;/a&gt;命令&lt;/h2&gt;&lt;p&gt;Linux dmesg (英文全称：display message) 用于显示开机信息。&lt;br&gt;kernel会将开机信息存储在ring bu</summary>
      
    
    
    
    <category term="Linux" scheme="https://blog.chobon.top/categories/Linux/"/>
    
    <category term="命令" scheme="https://blog.chobon.top/categories/Linux/%E5%91%BD%E4%BB%A4/"/>
    
    
    <category term="Linux" scheme="https://blog.chobon.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Proxmox安装</title>
    <link href="https://blog.chobon.top/posts/359bc848/"/>
    <id>https://blog.chobon.top/posts/359bc848/</id>
    <published>2021-11-19T09:15:45.000Z</published>
    <updated>2025-10-05T13:49:10.351Z</updated>
    
    <content type="html"><![CDATA[<h2 id="准备安装"><a href="#准备安装" class="headerlink" title="准备安装"></a>准备安装</h2><p>USB启动盘安装<a href="https://pve.proxmox.com/wiki/Prepare_Installation_Media#installation_prepare_media">文档</a></p><h3 id="下载官方安装源"><a href="#下载官方安装源" class="headerlink" title="下载官方安装源"></a>下载官方安装源</h3><p><a href="https://www.proxmox.com/en/downloads">官方ISO源</a></p><p>下载<code>Proxmox VE 7.1 ISO Installer</code></p><p><img src="https://img.chobon.top/blog/Proxmox/Proxmox_ISO.png" alt="proxmox-ve_7.1-1"></p><h3 id="制作USB启动盘"><a href="#制作USB启动盘" class="headerlink" title="制作USB启动盘"></a>制作USB启动盘</h3><p>下载官方推荐的USB启动盘安装工具<code>Etcher</code></p><p><img src="https://img.chobon.top/blog/Proxmox/Etcher.jpg" alt="Etcher"></p><p>插入USB，启动USB安装工具，选择ISO，等待安装结束</p><h3 id="开启BIOS虚拟化功能"><a href="#开启BIOS虚拟化功能" class="headerlink" title="开启BIOS虚拟化功能"></a>开启BIOS虚拟化功能</h3><p>具体操作参考<a href=""></a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>插入USB启动盘，重启计算机，选择启动设备为刚插入的U盘，出现选择安装界面，选择<code>Install Proxmox VE</code></p><p><img src="https://img.chobon.top/blog/Proxmox/Proxmox_Setup.png" alt="Proxmox_Setup"></p><p>选择安装磁盘，最好是NVMe接口的磁盘，为后续直通SATA Controller更简便</p><p><img src="https://img.chobon.top/blog/Proxmox/Proxmox_Setup_Disk.png" alt="Proxmox_Setup_Disk"></p><p>设置国家、时区和键盘布局</p><p><img src="https://img.chobon.top/blog/Proxmox/Proxmox_Setup_Country.png" alt="Proxmox_Setup_Country"></p><p>设置密码和邮箱</p><p><img src="https://img.chobon.top/blog/Proxmox/Proxmox_Setup_Password.png" alt="Proxmox_Setup_Password"></p><p>设置网络，由于我是通过PVE内部软路由上网，所以我设置的是路由内IP地址</p><p><img src="https://img.chobon.top/blog/Proxmox/Proxmox_Setup_Ip.png" alt="Proxmox_Setup_Ip"></p><p>接下来就可以等待安装结束，重启计算机，在同个网段或者连接网卡，输入刚才设置的ip地址，即可显示Proxmox的登陆界面</p><p><img src="https://img.chobon.top/blog/Proxmox/Proxmox_Login.png" alt="Proxmox_Login"></p><p>登录时，语言选择Chinese (Simplified)，登录成功后即可显示Proxmox Dashboard界面</p><p><img src="https://img.chobon.top/blog/Proxmox/Proxmox_Dashboard.png" alt="Proxmox_Dashboard"></p><h2 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h2><p>创建虚拟机</p><p><img src="https://img.chobon.top/blog/Proxmox/Proxmox_CreateVM.png" alt="Proxmox_CreateVM"></p><p>选择<code>使用CD/DVD光盘镜像文件（ISO）</code>或者<code>不使用任何介质</code>，这里是使用已经上传的OMV镜像。客户操作系统可以根据安装的系统选择，这里是Linux，版本也不用作修改</p><p><img src="https://img.chobon.top/blog/Proxmox/Proxmox_CreateVM_ISO.png" alt="Proxmox_CreateVM_ISO"></p><p>设置根据所安装的系统自定义配置，这里采用默认，不修改</p><p><img src="https://img.chobon.top/blog/Proxmox/Proxmox_CreateVM_System.png" alt="Proxmox_CreateVM_System"></p><p>设置根据所安装的系统自定义配置，这里采用默认32G磁盘空间，不修改</p><p><img src="https://img.chobon.top/blog/Proxmox/Proxmox_CreateVM_Disk.png" alt="Proxmox_CreateVM_Disk"></p><p>设置根据所安装的系统自定义配置，这里采用默认1核，不修改</p><p><img src="https://img.chobon.top/blog/Proxmox/Proxmox_CreateVM_Cpu.png" alt="Proxmox_CreateVM_Cpu"></p><p>设置根据所安装的系统自定义配置，这里采用默认2G内存，不修改</p><p><img src="https://img.chobon.top/blog/Proxmox/Proxmox_CreateVM_Memory.png" alt="Proxmox_CreateVM_Memory"></p><p>设置根据所安装的系统自定义配置，这里采用默认网桥vmbr0，不修改</p><p><img src="https://img.chobon.top/blog/Proxmox/Proxmox_CreateVM_Network.png" alt="Proxmox_CreateVM_Network"></p><p>点击完成，手动点击启动即可</p><p><img src="https://img.chobon.top/blog/Proxmox/Proxmox_CreateVM_Dashboard.png" alt="Proxmox_CreateVM_Dashboard"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;准备安装&quot;&gt;&lt;a href=&quot;#准备安装&quot; class=&quot;headerlink&quot; title=&quot;准备安装&quot;&gt;&lt;/a&gt;准备安装&lt;/h2&gt;&lt;p&gt;USB启动盘安装&lt;a href=&quot;https://pve.proxmox.com/wiki/Prepare_Installa</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="KVM" scheme="https://blog.chobon.top/categories/KVM/"/>
    
    <category term="Proxmox" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Proxmox/"/>
    
    
    <category term="Linux" scheme="https://blog.chobon.top/tags/Linux/"/>
    
    <category term="虚拟机" scheme="https://blog.chobon.top/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
    <category term="KVM" scheme="https://blog.chobon.top/tags/KVM/"/>
    
    <category term="Proxmox" scheme="https://blog.chobon.top/tags/Proxmox/"/>
    
    <category term="Debian" scheme="https://blog.chobon.top/tags/Debian/"/>
    
  </entry>
  
  <entry>
    <title>Proxmox更新</title>
    <link href="https://blog.chobon.top/posts/269386f3/"/>
    <id>https://blog.chobon.top/posts/269386f3/</id>
    <published>2021-11-19T09:15:45.000Z</published>
    <updated>2025-10-05T13:49:10.351Z</updated>
    
    <content type="html"><![CDATA[<h2 id="修改官方源"><a href="#修改官方源" class="headerlink" title="修改官方源"></a>修改官方源</h2><blockquote><p>编辑<code>/etc/apt/sources.list</code></p></blockquote><p>删掉原来的源地址，添加国内源地址</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.aliyun.com/debian/ bullseye main non-free contrib</span><br><span class="line">deb http://mirrors.aliyun.com/debian/ bullseye-updates main non-free contrib</span><br><span class="line">deb http://mirrors.aliyun.com/debian/ bullseye-backports main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian/ bullseye main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian/ bullseye-updates main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian/ bullseye-backports main non-free contrib</span><br><span class="line">deb http://mirrors.aliyun.com/debian-security/ bullseye-security main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian-security/ bullseye-security main non-free contrib</span><br></pre></td></tr></table></figure><h2 id="移出企业源"><a href="#移出企业源" class="headerlink" title="移出企业源"></a>移出企业源</h2><blockquote><p>编辑&#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;pve-enterprise.list</p></blockquote><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#deb https://enterprise.proxmox.com/debian/pve bullseye pve-enterprise</span><br></pre></td></tr></table></figure><h2 id="更新命令"><a href="#更新命令" class="headerlink" title="更新命令"></a>更新命令</h2><p>ssh连接pve执行命令或者在登录pve后台更新菜单里操作</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt update -y &amp; apt dist-upgrade -y</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;修改官方源&quot;&gt;&lt;a href=&quot;#修改官方源&quot; class=&quot;headerlink&quot; title=&quot;修改官方源&quot;&gt;&lt;/a&gt;修改官方源&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;编辑&lt;code&gt;/etc/apt/sources.list&lt;/code&gt;&lt;/p&gt;
&lt;/bl</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="KVM" scheme="https://blog.chobon.top/categories/KVM/"/>
    
    <category term="Proxmox" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Proxmox/"/>
    
    
    <category term="Linux" scheme="https://blog.chobon.top/tags/Linux/"/>
    
    <category term="虚拟机" scheme="https://blog.chobon.top/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
    <category term="KVM" scheme="https://blog.chobon.top/tags/KVM/"/>
    
    <category term="Proxmox" scheme="https://blog.chobon.top/tags/Proxmox/"/>
    
    <category term="Debian" scheme="https://blog.chobon.top/tags/Debian/"/>
    
  </entry>
  
  <entry>
    <title>ASP.NET Core MVC 5.x初始化源码解读（一）</title>
    <link href="https://blog.chobon.top/posts/226186c6/"/>
    <id>https://blog.chobon.top/posts/226186c6/</id>
    <published>2021-11-01T08:09:52.000Z</published>
    <updated>2025-10-05T13:49:10.349Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>初始化比较复杂，文章拆分成3部分Host、WebHost、Startup，逐一分析</p><h2 id="对象概念解释"><a href="#对象概念解释" class="headerlink" title="对象概念解释"></a>对象概念解释</h2><blockquote><p>接口定义</p></blockquote><ul><li><p><strong>IHost</strong> : <code>主机抽象</code></p><ul><li><strong>IServiceProvider</strong> : <code>对象服务提供器</code></li><li><strong>StartAsync</strong> : <code>启动方法</code></li><li><strong>StopAsync</strong> : <code>停止方法</code></li></ul></li><li><p><strong>IHostBuilder</strong> : <code>主机构造器抽象</code></p><ul><li><strong>ConfigureHostConfiguration()</strong> : <code>配置主机配置文件</code></li><li><strong>ConfigureAppConfiguration()</strong> : <code>配置应用配置文件</code></li><li><strong>ConfigureServices()</strong> : <code>配置服务</code></li><li><strong>UseServiceProviderFactory()</strong> : <code>配置服务提供商工厂</code></li><li><strong>ConfigureContainer()</strong> : <code>配置容器</code></li><li><strong>Build()</strong> : <code>构造主机</code></li></ul></li></ul><blockquote><p>具体实现</p></blockquote><ul><li><p><strong>Host</strong> : <code>主机</code></p><ul><li><strong>IHostLifetime</strong> : <code>主机生命周期</code></li><li><strong>IServiceProvider</strong> : <code>服务提供商</code></li><li><strong>ApplicationLifetime</strong> : <code>应用生命周期</code></li><li><strong>HostOptions</strong> : <code>主机选项</code></li><li><strong>IEnumerable&lt;IHostedService&gt;</strong> : <code>主机服务集合</code></li></ul></li><li><p><strong>HostBuilder</strong> : <code>主机构造器</code></p><ul><li><strong>_configureHostConfigActions</strong> : <code>主机配置委托集合</code></li><li><strong>_configureAppConfigActions</strong> : <code>应用配置委托集合</code></li><li><strong>_configureServicesActions</strong> : <code>服务委托集合</code></li><li><strong>_configureContainerActions</strong> : <code>容器委托集合</code></li><li><strong>_serviceProviderFactory</strong> : <code>服务提供商工厂</code></li></ul></li></ul><blockquote><p>静态类</p></blockquote><ul><li><strong>Host</strong><ul><li><strong>CreateDefaultBuilder()</strong> <code>创建新的默认主机构建器</code></li></ul></li></ul><h2 id="Host初始化创建"><a href="#Host初始化创建" class="headerlink" title="Host初始化创建"></a>Host初始化创建</h2><p>MVC项目创建时模板生成的代码，调用顺序CreateDefaultBuilder(<code>HostBuilder</code>) &#x3D;&gt; ConfigureWebHostDefaults(<code>HostBuilder</code>) &#x3D;&gt; <code>WebHostBuilder</code></p><p>App应用创建<strong>CreateHostBuilder</strong>方法，创建Host构建器，再调用Build方法，生成Host对象，调用Run启动方法</p><ul><li><strong>Program.cs</strong></li></ul><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        CreateHostBuilder(<span class="keyword">args</span>).Build().Run();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> IHostBuilder <span class="title">CreateHostBuilder</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span> =&gt;</span><br><span class="line">        Host.CreateDefaultBuilder(<span class="keyword">args</span>)</span><br><span class="line">            .ConfigureWebHostDefaults(webBuilder =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                webBuilder.UseStartup&lt;Startup&gt;();</span><br><span class="line">            &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Host构建器"><a href="#Host构建器" class="headerlink" title="Host构建器"></a>Host构建器</h3><p>Microsoft.Extensions.Hosting.Host静态类里有个<strong>CreateDefaultBuilder</strong>方法创建<code>HostBuilder</code>，设置上述的一些配置的委托集合，返回Host构造器对象HostBuilder</p><h4 id="CreateDefaultBuilder"><a href="#CreateDefaultBuilder" class="headerlink" title="CreateDefaultBuilder"></a>CreateDefaultBuilder</h4><blockquote><p>无参方法</p></blockquote><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> IHostBuilder <span class="title">CreateDefaultBuilder</span>()</span> =&gt;</span><br><span class="line">            CreateDefaultBuilder(<span class="keyword">args</span>: <span class="literal">null</span>);</span><br></pre></td></tr></table></figure><p>可以看到该方法实际上是设置了默认值。</p><p><code>IHostBuilder CreateDefaultBuilder(string[] args)</code>方法主要有以下功能：</p><blockquote><p>创建HostBuilder对象</p></blockquote><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> builder = <span class="keyword">new</span> HostBuilder();</span><br></pre></td></tr></table></figure><blockquote><p>设置内容根目录(UseContentRoot)</p></blockquote><p>本质是调用<code>ConfigureHostConfiguration</code>方法，往主机配置文件委托集合<code>_configureHostConfigActions</code>里添加</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">builder.UseContentRoot(Directory.GetCurrentDirectory());</span><br></pre></td></tr></table></figure><blockquote><p>设置主机配置(ConfigureHostConfiguration)</p></blockquote><p>把前缀是<code>DOTNET_</code>的环境变量加到配置里</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">builder.ConfigureHostConfiguration(config =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    config.AddEnvironmentVariables(prefix: <span class="string">&quot;DOTNET_&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">args</span> != <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        config.AddCommandLine(<span class="keyword">args</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>设置应用配置(ConfigureAppConfiguration)</p></blockquote><p>配置初始化(环境变量、appsettings.json、User Secrets)</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">builder.ConfigureAppConfiguration((hostingContext, config) =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> env = hostingContext.HostingEnvironment;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> reloadOnChange = hostingContext.Configuration.GetValue(<span class="string">&quot;hostBuilder:reloadConfigOnChange&quot;</span>, defaultValue: <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    config.AddJsonFile(<span class="string">&quot;appsettings.json&quot;</span>, optional: <span class="literal">true</span>, reloadOnChange: reloadOnChange)</span><br><span class="line">        .AddJsonFile(<span class="string">$&quot;appsettings.<span class="subst">&#123;env.EnvironmentName&#125;</span>.json&quot;</span>, optional: <span class="literal">true</span>, reloadOnChange: reloadOnChange);</span><br><span class="line">    <span class="keyword">if</span> (env.IsDevelopment() &amp;&amp; !<span class="built_in">string</span>.IsNullOrEmpty(env.ApplicationName))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> appAssembly = Assembly.Load(<span class="keyword">new</span> AssemblyName(env.ApplicationName));</span><br><span class="line">        <span class="keyword">if</span> (appAssembly != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            config.AddUserSecrets(appAssembly, optional: <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    config.AddEnvironmentVariables();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">args</span> != <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        config.AddCommandLine(<span class="keyword">args</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>设置日志配置(ConfigureLogging)</p></blockquote><p>加载配置文件的<code>Logging</code>部分，并根据平台环境，添加不同的日志实现</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">builder.ConfigureLogging((hostingContext, logging) =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> isWindows = RuntimeInformation.IsOSPlatform(OSPlatform.Windows);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// IMPORTANT: This needs to be added *before* configuration is loaded, this lets</span></span><br><span class="line">    <span class="comment">// the defaults be overridden by the configuration.</span></span><br><span class="line">    <span class="keyword">if</span> (isWindows)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// Default the EventLogLoggerProvider to warning or above</span></span><br><span class="line">        logging.AddFilter&lt;EventLogLoggerProvider&gt;(level =&gt; level &gt;= LogLevel.Warning);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    logging.AddConfiguration(hostingContext.Configuration.GetSection(<span class="string">&quot;Logging&quot;</span>));</span><br><span class="line">    logging.AddConsole();</span><br><span class="line">    logging.AddDebug();</span><br><span class="line">    logging.AddEventSourceLogger();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (isWindows)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// Add the EventLogLoggerProvider on windows machines</span></span><br><span class="line">        logging.AddEventLog();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>开发环境下开启作用域验证</p></blockquote><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">builder.UseDefaultServiceProvider((context, options) =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> isDevelopment = context.HostingEnvironment.IsDevelopment();</span><br><span class="line">    options.ValidateScopes = isDevelopment;</span><br><span class="line">    options.ValidateOnBuild = isDevelopment;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>设置服务提供商配置(UseDefaultServiceProvider)</p></blockquote><p>设置服务提供商选项，当前是开发环境</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> isDevelopment = context.HostingEnvironment.IsDevelopment();</span><br><span class="line">options.ValidateScopes = isDevelopment;</span><br><span class="line">options.ValidateOnBuild = isDevelopment;</span><br></pre></td></tr></table></figure><h3 id="连接HostBuilder和WebHostBuilder"><a href="#连接HostBuilder和WebHostBuilder" class="headerlink" title="连接HostBuilder和WebHostBuilder"></a>连接HostBuilder和WebHostBuilder</h3><blockquote><p>通过两个拓展方法连接HostBuilder和WebHostBuilder</p></blockquote><ul><li><strong><code>ConfigureWebHostDefaults</code> IHostBuilder拓展方法</strong></li></ul><p>文件位置：<a href="https://github.com/dotnet/aspnetcore/blob/v5.0.11/src/DefaultBuilder/src/GenericHostBuilderExtensions.cs#L31">GenericHostBuilderExtensions.cs</a></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> IHostBuilder <span class="title">ConfigureWebHostDefaults</span>(<span class="params"><span class="keyword">this</span> IHostBuilder builder, Action&lt;IWebHostBuilder&gt; configure</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (configure <span class="keyword">is</span> <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="keyword">nameof</span>(configure));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> builder.ConfigureWebHost(webHostBuilder =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        WebHost.ConfigureWebDefaults(webHostBuilder);</span><br><span class="line"></span><br><span class="line">        configure(webHostBuilder);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong><code>ConfigureWebHost</code></strong></li></ul><p>文件位置：<a href="https://github.com/dotnet/aspnetcore/blob/2924ca229b3d6c91b7c9eded119b31dfd7aa1fef/src/Hosting/Hosting/src/GenericHostWebHostBuilderExtensions.cs">GenericHostWebHostBuilderExtensions.cs</a></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> IHostBuilder <span class="title">ConfigureWebHost</span>(<span class="params"><span class="keyword">this</span> IHostBuilder builder, Action&lt;IWebHostBuilder&gt; configure</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (configure <span class="keyword">is</span> <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="keyword">nameof</span>(configure));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> builder.ConfigureWebHost(configure, _ =&gt; &#123; &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> IHostBuilder <span class="title">ConfigureWebHost</span>(<span class="params"><span class="keyword">this</span> IHostBuilder builder, Action&lt;IWebHostBuilder&gt; configure, Action&lt;WebHostBuilderOptions&gt; configureWebHostBuilder</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (configure <span class="keyword">is</span> <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="keyword">nameof</span>(configure));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (configureWebHostBuilder <span class="keyword">is</span> <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentNullException(<span class="keyword">nameof</span>(configureWebHostBuilder));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> webHostBuilderOptions = <span class="keyword">new</span> WebHostBuilderOptions();</span><br><span class="line">    configureWebHostBuilder(webHostBuilderOptions);</span><br><span class="line">    <span class="keyword">var</span> webhostBuilder = <span class="keyword">new</span> GenericWebHostBuilder(builder, webHostBuilderOptions);</span><br><span class="line">    configure(webhostBuilder);</span><br><span class="line">    builder.ConfigureServices((context, services) =&gt; services.AddHostedService&lt;GenericWebHostService&gt;());</span><br><span class="line">    <span class="keyword">return</span> builder;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="与2-x版本的区别"><a href="#与2-x版本的区别" class="headerlink" title="与2.x版本的区别"></a>与2.x版本的区别</h3><p>在2.x里WebHost直接创建Server，构建Http管道，而3.x则是在Host主机内创建HostedService服务，并在HostedService内创建Server及Http管道</p><p>Host和WebHost都做了一些基础设置</p><ol><li>设置 Content 根目录，将当前项目的根目录作为 ContentRoot 的目录。</li><li>读取 appsettinggs.json 配置文件，开发环境下的 UserSecrets 以及环境变量和命令行参数。</li><li>读取配置文件中的 Logging 节点，对日志系统进行配置。</li><li>设置开发环境下， ServiceProvider 的 ValidateScopes 为 true，避免直接在 Configure 方法中获取 Scope 实例。</li></ol><p>从3.x开始保留了2.x中WebHost创建CreateDefaultBuilder方法，只是把涉及到Web这块业务抽出来单独成一个<code>ConfigureWebDefaults(IWebHostBuilder builder)</code>方法，方便HostBuilder和WebHostBuilder复用</p><h2 id="Host启动流程"><a href="#Host启动流程" class="headerlink" title="Host启动流程"></a>Host启动流程</h2><h3 id="Build"><a href="#Build" class="headerlink" title="Build"></a>Build</h3><p><em><strong>此方法仅执行一次</strong></em></p><blockquote><p>BuildHostConfiguration</p></blockquote><p>创建主机配置生成器ConfigurationBuilder，然后回调我们的代码提供的委托对配置对象的数据源进行设置，最终通过配置对象生成器Build生成配置对象</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">BuildHostConfiguration</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> configBuilder = <span class="keyword">new</span> ConfigurationBuilder()</span><br><span class="line">        .AddInMemoryCollection(); <span class="comment">// Make sure there&#x27;s some default storage since there are no default providers</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">var</span> buildAction <span class="keyword">in</span> _configureHostConfigActions)</span><br><span class="line">    &#123;</span><br><span class="line">        buildAction(configBuilder);</span><br><span class="line">    &#125;</span><br><span class="line">    _hostConfiguration = configBuilder.Build();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>CreateHostingEnvironment</p></blockquote><p>创建HostingEnvironment（含义上面有说），默认用配置对象进行赋值，然后回调我们的代码提供的委托进一步设置主机环境对象</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CreateHostingEnvironment</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    _hostingEnvironment = <span class="keyword">new</span> HostingEnvironment()</span><br><span class="line">    &#123;</span><br><span class="line">        ApplicationName = _hostConfiguration[HostDefaults.ApplicationKey],</span><br><span class="line">        EnvironmentName = _hostConfiguration[HostDefaults.EnvironmentKey] ?? Environments.Production,</span><br><span class="line">        ContentRootPath = ResolveContentRootPath(_hostConfiguration[HostDefaults.ContentRootKey], AppContext.BaseDirectory),</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">string</span>.IsNullOrEmpty(_hostingEnvironment.ApplicationName))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// Note GetEntryAssembly returns null for the net4x console test runner.</span></span><br><span class="line">        _hostingEnvironment.ApplicationName = Assembly.GetEntryAssembly()?.GetName().Name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    _hostingEnvironment.ContentRootFileProvider = <span class="keyword">new</span> PhysicalFileProvider(_hostingEnvironment.ContentRootPath);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>CreateHostBuilderContext</p></blockquote><p>初始化构建器上下文(BuilderContext)</p><p>负责承载主机<code>Host</code>启动的一些环境变量<code>HostingEnvironment</code>、配置<code>Configuration</code>、属性<code>Properties</code></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">Microsoft.Extensions.Hosting</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Context containing the common services on the <span class="doctag">&lt;see cref=&quot;IHost&quot; /&gt;</span>. Some properties may be null until set by the <span class="doctag">&lt;see cref=&quot;IHost&quot; /&gt;</span>.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">HostBuilderContext</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">HostBuilderContext</span>(<span class="params">IDictionary&lt;<span class="built_in">object</span>, <span class="built_in">object</span>&gt; properties</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Properties = properties ?? <span class="keyword">throw</span> <span class="keyword">new</span> System.ArgumentNullException(<span class="keyword">nameof</span>(properties));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> The <span class="doctag">&lt;see cref=&quot;IHostEnvironment&quot; /&gt;</span> initialized by the <span class="doctag">&lt;see cref=&quot;IHost&quot; /&gt;</span>.</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> IHostEnvironment HostingEnvironment &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> The <span class="doctag">&lt;see cref=&quot;IConfiguration&quot; /&gt;</span> containing the merged configuration of the application and the <span class="doctag">&lt;see cref=&quot;IHost&quot; /&gt;</span>.</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> IConfiguration Configuration &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> A central location for sharing state between components during the host building process.</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> IDictionary&lt;<span class="built_in">object</span>, <span class="built_in">object</span>&gt; Properties &#123; <span class="keyword">get</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>BuildAppConfiguration</p></blockquote><p>创建配置构建起<code>IConfigurationBuilder</code>，负责承接配置的构建，最后把构建好的配置<code>IConfiguration</code>赋值给<code>HostBuilderContext</code></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">BuildAppConfiguration</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    IConfigurationBuilder configBuilder = <span class="keyword">new</span> ConfigurationBuilder()</span><br><span class="line">        .SetBasePath(_hostingEnvironment.ContentRootPath)</span><br><span class="line">        .AddConfiguration(_hostConfiguration, shouldDisposeConfiguration: <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> (Action&lt;HostBuilderContext, IConfigurationBuilder&gt; buildAction <span class="keyword">in</span> _configureAppConfigActions)</span><br><span class="line">    &#123;</span><br><span class="line">        buildAction(_hostBuilderContext, configBuilder);</span><br><span class="line">    &#125;</span><br><span class="line">    _appConfiguration = configBuilder.Build();</span><br><span class="line">    _hostBuilderContext.Configuration = _appConfiguration;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>CreateServiceProvider</p></blockquote><p>创建对象服务容器<code>ServiceCollection</code>，把一些环境变量、生命周期、主机、配置等对象存放进去</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CreateServiceProvider</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> services = <span class="keyword">new</span> ServiceCollection();</span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> <span class="keyword">warning</span> disable CS0618 // Type or member is obsolete</span></span><br><span class="line">            services.AddSingleton&lt;IHostingEnvironment&gt;(_hostingEnvironment);</span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> <span class="keyword">warning</span> restore CS0618 // Type or member is obsolete</span></span><br><span class="line">            services.AddSingleton&lt;IHostEnvironment&gt;(_hostingEnvironment);</span><br><span class="line">            services.AddSingleton(_hostBuilderContext);</span><br><span class="line">            <span class="comment">// register configuration as factory to make it dispose with the service provider</span></span><br><span class="line">            services.AddSingleton(_ =&gt; _appConfiguration);</span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> <span class="keyword">warning</span> disable CS0618 // Type or member is obsolete</span></span><br><span class="line">            services.AddSingleton&lt;IApplicationLifetime&gt;(s =&gt; (IApplicationLifetime)s.GetService&lt;IHostApplicationLifetime&gt;());</span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> <span class="keyword">warning</span> restore CS0618 // Type or member is obsolete</span></span><br><span class="line">            services.AddSingleton&lt;IHostApplicationLifetime, ApplicationLifetime&gt;();</span><br><span class="line"></span><br><span class="line">            AddLifetime(services);</span><br><span class="line"></span><br><span class="line">            services.AddSingleton&lt;IHost&gt;(_ =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> Internal.Host(_appServices,</span><br><span class="line">                    _hostingEnvironment,</span><br><span class="line">                    _defaultProvider,</span><br><span class="line">                    _appServices.GetRequiredService&lt;IHostApplicationLifetime&gt;(),</span><br><span class="line">                    _appServices.GetRequiredService&lt;ILogger&lt;Internal.Host&gt;&gt;(),</span><br><span class="line">                    _appServices.GetRequiredService&lt;IHostLifetime&gt;(),</span><br><span class="line">                    _appServices.GetRequiredService&lt;IOptions&lt;HostOptions&gt;&gt;());</span><br><span class="line">            &#125;);</span><br><span class="line">            services.AddOptions().Configure&lt;HostOptions&gt;(options =&gt; &#123; options.Initialize(_hostConfiguration); &#125;);</span><br><span class="line">            services.AddLogging();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">foreach</span> (Action&lt;HostBuilderContext, IServiceCollection&gt; configureServicesAction <span class="keyword">in</span> _configureServicesActions)</span><br><span class="line">            &#123;</span><br><span class="line">                configureServicesAction(_hostBuilderContext, services);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">object</span> containerBuilder = _serviceProviderFactory.CreateBuilder(services);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">foreach</span> (IConfigureContainerAdapter containerAction <span class="keyword">in</span> _configureContainerActions)</span><br><span class="line">            &#123;</span><br><span class="line">                containerAction.ConfigureContainer(_hostBuilderContext, containerBuilder);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            _appServices = _serviceProviderFactory.CreateServiceProvider(containerBuilder);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (_appServices == <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> InvalidOperationException(SR.NullIServiceProvider);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// resolve configuration explicitly once to mark it as resolved within the</span></span><br><span class="line">            <span class="comment">// service provider, ensuring it will be properly disposed with the provider</span></span><br><span class="line">            _ = _appServices.GetService&lt;IConfiguration&gt;();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;初始化比较复杂，文章拆分成3部分Host、WebHost、Startup，逐一分析&lt;/p&gt;
&lt;h2 id=&quot;对象概念解释&quot;&gt;&lt;a href=</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term=".NET" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NET/"/>
    
    <category term="AspNetCore" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NET/AspNetCore/"/>
    
    
    <category term="AspNetCore" scheme="https://blog.chobon.top/tags/AspNetCore/"/>
    
    <category term=".NET" scheme="https://blog.chobon.top/tags/NET/"/>
    
  </entry>
  
  <entry>
    <title>ASP.NET Core MVC 5.x初始化源码解读（二）</title>
    <link href="https://blog.chobon.top/posts/329c39bd/"/>
    <id>https://blog.chobon.top/posts/329c39bd/</id>
    <published>2021-11-01T08:09:52.000Z</published>
    <updated>2025-10-05T13:49:10.349Z</updated>
    
    <content type="html"><![CDATA[<h2 id="WebHost对象概念解释"><a href="#WebHost对象概念解释" class="headerlink" title="WebHost对象概念解释"></a>WebHost对象概念解释</h2><p>WebHost</p><blockquote><p>接口定义</p></blockquote><ul><li><p><strong>IWebHost</strong> : <code>主机抽象</code></p><ul><li><strong>IFeatureCollection</strong> : <code>插件容器</code></li><li><strong>IServiceProvider</strong> : <code>对象服务提供器</code></li><li><strong>Start</strong> : <code>启动方法（同步）</code></li><li><strong>StartAsync</strong> : <code>启动方法</code></li><li><strong>StopAsync</strong> : <code>停止方法</code></li></ul></li><li><p><strong>IWebHostBuilder</strong> : <code>网站主机构建器</code></p><ul><li><strong>Build</strong> : <code>构建</code></li><li><strong>ConfigureAppConfiguration</strong> : <code>配置应用配置文件</code></li><li><strong>ConfigureServices</strong> : <code>配置服务</code></li><li><strong>GetSetting</strong> : <code>读取单个配置值</code></li><li><strong>UseSetting</strong> : <code>设置单个配置项</code></li></ul></li></ul><blockquote><p>具体实现</p></blockquote><ul><li><p><strong>GenericWebHostBuilder</strong> : <code>通用网站主机构造器（HostBuilder桥接器）</code></p><ul><li><strong>ConfigureHostConfiguration</strong> : <code>设置主机配置</code></li><li><strong>ConfigureAppConfiguration</strong> : <code>设置应用配置</code></li><li><strong>ConfigureServices</strong> : <code>设置服务</code></li><li><strong>UseStartup</strong> : <code>使用StartUp配置启动</code></li></ul></li><li><p><strong>HostingStartupWebHostBuilder</strong> : <code>加载StartUp的网站主机构造器（装饰器）</code></p></li></ul><blockquote><p>静态类</p></blockquote><ul><li><strong>WebHost</strong><ul><li><strong>CreateDefaultBuilder()</strong> : 创建网站主机构建器</li></ul></li></ul><h2 id="WebHost初始化"><a href="#WebHost初始化" class="headerlink" title="WebHost初始化"></a>WebHost初始化</h2><p><code>HostBuilder</code>调用<code>ConfigureWebHost</code>拓展方法创建<code>WebHostBuilderOptions</code>和<code>GenericWebHostBuilder</code></p><h3 id="WebHostBuilder初始化"><a href="#WebHostBuilder初始化" class="headerlink" title="WebHostBuilder初始化"></a>WebHostBuilder初始化</h3><ul><li><strong><code>GenericWebHostBuilder</code>类</strong></li></ul><p>文件位置：<a href="https://github.com/dotnet/aspnetcore/blob/master/src/Hosting/Hosting/src/GenericHost/GenericWebHostBuilder.cs#L32">GenericWebHostBuilder.cs</a></p><p>GenericWebHostBuilder装饰者类，构造函数传入参数<code>HostBuilder</code>，创建通用<code>WebHostBuilder</code></p><ul><li><strong><code>ConfigureWebDefaults</code>方法</strong></li></ul><ol><li>注册 Kestrel 中间件，指定 WebHost 要使用的 Server（HTTP服务器）。</li><li>添加 IIS 和 IISIntegration 中间件。</li></ol><p>文件位置：<a href="https://github.com/dotnet/aspnetcore/blob/v5.0.11/src/DefaultBuilder/src/WebHost.cs#L156">WebHost.cs</a></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">internal</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ConfigureWebDefaults</span>(<span class="params">IWebHostBuilder builder</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    builder.ConfigureAppConfiguration((ctx, cb) =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (ctx.HostingEnvironment.IsDevelopment())</span><br><span class="line">        &#123;</span><br><span class="line">            StaticWebAssetsLoader.UseStaticWebAssets(ctx.HostingEnvironment, ctx.Configuration);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    builder.UseKestrel((builderContext, options) =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        options.Configure(builderContext.Configuration.GetSection(<span class="string">&quot;Kestrel&quot;</span>));</span><br><span class="line">    &#125;)</span><br><span class="line">    .ConfigureServices((hostingContext, services) =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// Fallback</span></span><br><span class="line">        services.PostConfigure&lt;HostFilteringOptions&gt;(options =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (options.AllowedHosts == <span class="literal">null</span> || options.AllowedHosts.Count == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// &quot;AllowedHosts&quot;: &quot;localhost;127.0.0.1;[::1]&quot;</span></span><br><span class="line">                <span class="keyword">var</span> hosts = hostingContext.Configuration[<span class="string">&quot;AllowedHosts&quot;</span>]?.Split(<span class="keyword">new</span>[] &#123; <span class="string">&#x27;;&#x27;</span> &#125;, StringSplitOptions.RemoveEmptyEntries);</span><br><span class="line">                <span class="comment">// Fall back to &quot;*&quot; to disable.</span></span><br><span class="line">                options.AllowedHosts = (hosts?.Length &gt; <span class="number">0</span> ? hosts : <span class="keyword">new</span>[] &#123; <span class="string">&quot;*&quot;</span> &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// Change notification</span></span><br><span class="line">        services.AddSingleton&lt;IOptionsChangeTokenSource&lt;HostFilteringOptions&gt;&gt;(</span><br><span class="line">                    <span class="keyword">new</span> ConfigurationChangeTokenSource&lt;HostFilteringOptions&gt;(hostingContext.Configuration));</span><br><span class="line"></span><br><span class="line">        services.AddTransient&lt;IStartupFilter, HostFilteringStartupFilter&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">string</span>.Equals(<span class="string">&quot;true&quot;</span>, hostingContext.Configuration[<span class="string">&quot;ForwardedHeaders_Enabled&quot;</span>], StringComparison.OrdinalIgnoreCase))</span><br><span class="line">        &#123;</span><br><span class="line">            services.Configure&lt;ForwardedHeadersOptions&gt;(options =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                options.ForwardedHeaders = ForwardedHeaders.XForwardedFor | ForwardedHeaders.XForwardedProto;</span><br><span class="line">                <span class="comment">// Only loopback proxies are allowed by default. Clear that restriction because forwarders are</span></span><br><span class="line">                <span class="comment">// being enabled by explicit configuration.</span></span><br><span class="line">                options.KnownNetworks.Clear();</span><br><span class="line">                options.KnownProxies.Clear();</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            services.AddTransient&lt;IStartupFilter, ForwardedHeadersStartupFilter&gt;();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        services.AddRouting();</span><br><span class="line">    &#125;)</span><br><span class="line">    .UseIIS()</span><br><span class="line">    .UseIISIntegration();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>把<code>HostBuilder</code>和<code>WebHostBuilderOptions</code>通过构造函数传递给<code>WebHostBuilder</code>初始化对象。</p><h4 id="WebHost构造器"><a href="#WebHost构造器" class="headerlink" title="WebHost构造器"></a>WebHost构造器</h4><p>创建WebHostBuilder通过拓展方法连接HostBuilder，把一些配置、服务、方法加进Host构建过程中。</p><h5 id="GenericWebHostBuilder"><a href="#GenericWebHostBuilder" class="headerlink" title="GenericWebHostBuilder"></a>GenericWebHostBuilder</h5><blockquote><p>构造函数里依次调HostBuilder的方法<br><code>ConfigureHostConfiguration</code>合并<code>Host</code>和<code>WebHost</code>的配置文件，并处理<code>StartUp</code><br><code>ConfigureAppConfiguration</code>委托调用<code>HostingStartupWebHostBuilder</code>的<code>ConfigureAppConfiguration</code><br><code>ConfigureServices</code>配置服务容器，添加<code>DiagnosticListener</code>,<code>IHttpContextFactory</code>、<code>IMiddlewareFactory</code>、<code>IApplicationBuilderFactory</code>等对象服务</p></blockquote><p><code>HostingStartupWebHostBuilder``GenericWebHostBuilder</code></p><blockquote><p>设置主机配置(ConfigureHostConfiguration)</p></blockquote><p>把前缀是<code>ASPNETCORE_</code>的环境变量加到主机配置里，并创建<code>WebHostBuilder</code>装饰器<code>HostingStartupWebHostBuilder</code>来执行应用的<code>StartUp</code>文件</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> configBuilder = <span class="keyword">new</span> ConfigurationBuilder()</span><br><span class="line">    .AddInMemoryCollection();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!options.SuppressEnvironmentConfiguration)</span><br><span class="line">&#123;</span><br><span class="line">    configBuilder.AddEnvironmentVariables(prefix: <span class="string">&quot;ASPNETCORE_&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">_config = configBuilder.Build();</span><br><span class="line"></span><br><span class="line">_builder.ConfigureHostConfiguration(config =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    config.AddConfiguration(_config);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// We do this super early but still late enough that we can process the configuration</span></span><br><span class="line">    <span class="comment">// wired up by calls to UseSetting</span></span><br><span class="line">    ExecuteHostingStartups();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>设置应用配置(ConfigureAppConfiguration)</p></blockquote><p>设置WebHost上下文<code>WebHostContext</code>，<code>HostingStartupWebHostBuilder</code>负责把<code>StartUp</code>里的配置加到构建管道中 </p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">_builder.ConfigureAppConfiguration((context, configurationBuilder) =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (_hostingStartupWebHostBuilder != <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">var</span> webhostContext = GetWebHostBuilderContext(context);</span><br><span class="line">        _hostingStartupWebHostBuilder.ConfigureAppConfiguration(webhostContext, configurationBuilder);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>设置服务(ConfigureServices)</p></blockquote><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">_builder.ConfigureServices((context, services) =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> webhostContext = GetWebHostBuilderContext(context);</span><br><span class="line">    <span class="keyword">var</span> webHostOptions = (WebHostOptions)context.Properties[<span class="keyword">typeof</span>(WebHostOptions)];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Add the IHostingEnvironment and IApplicationLifetime from Microsoft.AspNetCore.Hosting</span></span><br><span class="line">    services.AddSingleton(webhostContext.HostingEnvironment);</span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> <span class="keyword">warning</span> disable CS0618 // Type or member is obsolete</span></span><br><span class="line">    services.AddSingleton((AspNetCore.Hosting.IHostingEnvironment)webhostContext.HostingEnvironment);</span><br><span class="line">    services.AddSingleton&lt;IApplicationLifetime, GenericWebHostApplicationLifetime&gt;();</span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> <span class="keyword">warning</span> restore CS0618 // Type or member is obsolete</span></span><br><span class="line"></span><br><span class="line">    services.Configure&lt;GenericWebHostServiceOptions&gt;(options =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// Set the options</span></span><br><span class="line">        options.WebHostOptions = webHostOptions;</span><br><span class="line">        <span class="comment">// Store and forward any startup errors</span></span><br><span class="line">        options.HostingStartupExceptions = _hostingStartupErrors;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// REVIEW: This is bad since we don&#x27;t own this type. Anybody could add one of these and it would mess things up</span></span><br><span class="line">    <span class="comment">// We need to flow this differently</span></span><br><span class="line">    <span class="keyword">var</span> listener = <span class="keyword">new</span> DiagnosticListener(<span class="string">&quot;Microsoft.AspNetCore&quot;</span>);</span><br><span class="line">    services.TryAddSingleton&lt;DiagnosticListener&gt;(listener);</span><br><span class="line">    services.TryAddSingleton&lt;DiagnosticSource&gt;(listener);</span><br><span class="line"></span><br><span class="line">    services.TryAddSingleton&lt;IHttpContextFactory, DefaultHttpContextFactory&gt;();</span><br><span class="line">    services.TryAddScoped&lt;IMiddlewareFactory, MiddlewareFactory&gt;();</span><br><span class="line">    services.TryAddSingleton&lt;IApplicationBuilderFactory, ApplicationBuilderFactory&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// IMPORTANT: This needs to run *before* direct calls on the builder (like UseStartup)</span></span><br><span class="line">    _hostingStartupWebHostBuilder?.ConfigureServices(webhostContext, services);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Support UseStartup(assemblyName)</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">string</span>.IsNullOrEmpty(webHostOptions.StartupAssembly))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> startupType = StartupLoader.FindStartupType(webHostOptions.StartupAssembly, webhostContext.HostingEnvironment.EnvironmentName);</span><br><span class="line">            UseStartup(startupType, context, services);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception ex) <span class="keyword">when</span> (webHostOptions.CaptureStartupErrors)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> capture = ExceptionDispatchInfo.Capture(ex);</span><br><span class="line"></span><br><span class="line">            services.Configure&lt;GenericWebHostServiceOptions&gt;(options =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                options.ConfigureApplication = app =&gt;</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">// Throw if there was any errors initializing startup</span></span><br><span class="line">                    capture.Throw();</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h5 id="ConfigureWebDefaults"><a href="#ConfigureWebDefaults" class="headerlink" title="ConfigureWebDefaults"></a>ConfigureWebDefaults</h5><blockquote><p>设置应用配置(ConfigureAppConfiguration)</p></blockquote><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">builder.ConfigureAppConfiguration((ctx, cb) =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (ctx.HostingEnvironment.IsDevelopment())</span><br><span class="line">    &#123;</span><br><span class="line">        StaticWebAssetsLoader.UseStaticWebAssets(ctx.HostingEnvironment, ctx.Configuration);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>设置站点服务器(UseKestrel)和设置服务(ConfigureServices)</p></blockquote><p>加载配置文件<code>Kestrel</code>部分，启用Kestrel，设置服务中间件，头部转发、路由、过滤器、IIS服务等</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">builder.UseKestrel((builderContext, options) =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    options.Configure(builderContext.Configuration.GetSection(<span class="string">&quot;Kestrel&quot;</span>));</span><br><span class="line">&#125;)</span><br><span class="line">.ConfigureServices((hostingContext, services) =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Fallback</span></span><br><span class="line">    services.PostConfigure&lt;HostFilteringOptions&gt;(options =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (options.AllowedHosts == <span class="literal">null</span> || options.AllowedHosts.Count == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// &quot;AllowedHosts&quot;: &quot;localhost;127.0.0.1;[::1]&quot;</span></span><br><span class="line">            <span class="keyword">var</span> hosts = hostingContext.Configuration[<span class="string">&quot;AllowedHosts&quot;</span>]?.Split(<span class="keyword">new</span>[] &#123; <span class="string">&#x27;;&#x27;</span> &#125;, StringSplitOptions.RemoveEmptyEntries);</span><br><span class="line">            <span class="comment">// Fall back to &quot;*&quot; to disable.</span></span><br><span class="line">            options.AllowedHosts = (hosts?.Length &gt; <span class="number">0</span> ? hosts : <span class="keyword">new</span>[] &#123; <span class="string">&quot;*&quot;</span> &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// Change notification</span></span><br><span class="line">    services.AddSingleton&lt;IOptionsChangeTokenSource&lt;HostFilteringOptions&gt;&gt;(</span><br><span class="line">                <span class="keyword">new</span> ConfigurationChangeTokenSource&lt;HostFilteringOptions&gt;(hostingContext.Configuration));</span><br><span class="line"></span><br><span class="line">    services.AddTransient&lt;IStartupFilter, HostFilteringStartupFilter&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">string</span>.Equals(<span class="string">&quot;true&quot;</span>, hostingContext.Configuration[<span class="string">&quot;ForwardedHeaders_Enabled&quot;</span>], StringComparison.OrdinalIgnoreCase))</span><br><span class="line">    &#123;</span><br><span class="line">        services.Configure&lt;ForwardedHeadersOptions&gt;(options =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            options.ForwardedHeaders = ForwardedHeaders.XForwardedFor | ForwardedHeaders.XForwardedProto;</span><br><span class="line">            <span class="comment">// Only loopback proxies are allowed by default. Clear that restriction because forwarders are</span></span><br><span class="line">            <span class="comment">// being enabled by explicit configuration.</span></span><br><span class="line">            options.KnownNetworks.Clear();</span><br><span class="line">            options.KnownProxies.Clear();</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        services.AddTransient&lt;IStartupFilter, ForwardedHeadersStartupFilter&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    services.AddRouting();</span><br><span class="line">&#125;)</span><br><span class="line">.UseIIS()</span><br><span class="line">.UseIISIntegration();</span><br></pre></td></tr></table></figure><h2 id="Startup"><a href="#Startup" class="headerlink" title="Startup"></a>Startup</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Startup</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Startup</span>(<span class="params">IConfiguration configuration</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Configuration = configuration;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> IConfiguration Configuration &#123; <span class="keyword">get</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// This method gets called by the runtime. Use this method to add services to the container.</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ConfigureServices</span>(<span class="params">IServiceCollection services</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        services.AddControllersWithViews();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// This method gets called by the runtime. Use this method to configure the HTTP request pipeline.</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Configure</span>(<span class="params">IApplicationBuilder app, IWebHostEnvironment env</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (env.IsDevelopment())</span><br><span class="line">        &#123;</span><br><span class="line">            app.UseDeveloperExceptionPage();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            app.UseExceptionHandler(<span class="string">&quot;/Home/Error&quot;</span>);</span><br><span class="line">            <span class="comment">// The default HSTS value is 30 days. You may want to change this for production scenarios, see https://aka.ms/aspnetcore-hsts.</span></span><br><span class="line">            app.UseHsts();</span><br><span class="line">        &#125;</span><br><span class="line">        app.UseHttpsRedirection();</span><br><span class="line">        app.UseStaticFiles();</span><br><span class="line"></span><br><span class="line">        app.UseRouting();</span><br><span class="line"></span><br><span class="line">        app.UseAuthorization();</span><br><span class="line"></span><br><span class="line">        app.UseEndpoints(endpoints =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            endpoints.MapControllerRoute(</span><br><span class="line">                name: <span class="string">&quot;default&quot;</span>,</span><br><span class="line">                pattern: <span class="string">&quot;&#123;controller=Home&#125;/&#123;action=Index&#125;/&#123;id?&#125;&quot;</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="站点服务初始化配置"><a href="#站点服务初始化配置" class="headerlink" title="站点服务初始化配置"></a>站点服务初始化配置</h2><h3 id="RazorPage的路由解析服务"><a href="#RazorPage的路由解析服务" class="headerlink" title="RazorPage的路由解析服务"></a>RazorPage的路由解析服务</h3><blockquote><p>注册服务</p></blockquote><p>文件位置：<a href="https://github.com/dotnet/aspnetcore/blob/v5.0.11/src/Mvc/Mvc.RazorPages/src/DependencyInjection/MvcRazorPagesMvcCoreBuilderExtensions.cs">MvcRazorPagesMvcCoreBuilderExtensions.cs</a></p><ul><li><strong>AddRazorPages</strong> : 添加Razor Page服务</li><li><strong>WithRazorPagesRoot</strong> : 设置Razor Page根目录</li></ul><blockquote><p>映射终端</p></blockquote><p>文件位置：<a href="https://github.com/dotnet/aspnetcore/blob/v5.0.11/src/Mvc/Mvc.RazorPages/src/Builder/RazorPagesEndpointRouteBuilderExtensions.cs">RazorPagesEndpointRouteBuilderExtensions.cs</a></p><ul><li><strong>MapRazorPages</strong> : 设置默认映射路由路径</li><li><strong>MapFallbackToPage</strong> : 动态路由，找不到符合路径时自动跳转带设定路由</li><li><strong>MapFallbackToAreaPage</strong> : 动态路由，找不到符合路径时自动跳转带设定二级路由</li><li><strong>MapDynamicPageRoute</strong> : 动态路由，自定义路由规则</li></ul><blockquote><p>初始化</p></blockquote><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ConfigureServices</span>(<span class="params">IServiceCollection services</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    services.AddRazorPages();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Configure</span>(<span class="params">IApplicationBuilder app, IWebHostEnvironment env</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">    app.UseEndpoints(endpoints =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        endpoints.MapRazorPages();<span class="comment">//设置路由规则</span></span><br><span class="line">    &#125;);</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Controllers的路由解析服务"><a href="#Controllers的路由解析服务" class="headerlink" title="Controllers的路由解析服务"></a>Controllers的路由解析服务</h3><blockquote><p>注册服务</p></blockquote><p>文件位置：<a href="https://github.com/dotnet/aspnetcore/blob/v5.0.11/src/Mvc/Mvc/src/MvcServiceCollectionExtensions.cs">MvcServiceCollectionExtensions.cs</a></p><ul><li><strong>AddMvcCore</strong> : 最轻量，仅使用了路由解析必要服务，其他身份验证和资料验证等功能就需要另外引用</li><li><strong>AddControllers</strong> : 次轻量，使用WebApi首选，比AddMvcCore多了资料、身份验证跟跨域等相关的服务</li><li><strong>AddControllersWithViews</strong> : 包含AddControllers再加上View Page的服务，使用标准MVC服务可以使用</li><li><strong>AddRazorPages</strong> : 使用RazorPage与部分AddControllers功能，前端使用RazorPage，不需要太多Api接口</li><li><strong>AddMVC</strong> : 功能最全的MVC服务</li></ul><blockquote><p>映射终端</p></blockquote><p>文件位置：<a href="https://github.com/dotnet/aspnetcore/blob/v5.0.11/src/Mvc/Mvc.Core/src/Builder/ControllerEndpointRouteBuilderExtensions.cs">ControllerEndpointRouteBuilderExtensions.cs</a></p><ul><li><strong>MapControllers</strong> : 将<code>UseRouting</code>的结果注册到终端</li><li><strong>MapDefaultControllerRoute</strong> : 同<code>MapControllers</code>只是多设置一条{controller&#x3D;Home}&#x2F;{action&#x3D;Idenx}&#x2F;{id?}的预设路径</li><li><strong>MapControllerRoute</strong> : 手动设定终端路由</li><li><strong>MapAreaControllerRoute</strong> : 与<code>MapControllerRouter</code>同，路径多了Area的前缀</li><li><strong>MapDynamicControllerRoute</strong> : 动态路由，自定义路由规则</li><li><strong>MapFallbackToController</strong> : 动态路由，当找不到符合的路径时自动跳转到自定路由</li></ul><blockquote><p>初始化</p></blockquote><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ConfigureServices</span>(<span class="params">IServiceCollection services</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    services.AddMvc();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Configure</span>(<span class="params">IApplicationBuilder app, IWebHostEnvironment env</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">    app.UseEndpoints(endpoints =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        endpoints.MapControllers();<span class="comment">//设置路由规则</span></span><br><span class="line">    &#125;);</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="SignalR的路由解析服务"><a href="#SignalR的路由解析服务" class="headerlink" title="SignalR的路由解析服务"></a>SignalR的路由解析服务</h3><blockquote><p>注册服务</p></blockquote><p>文件位置：<a href="https://github.com/dotnet/aspnetcore/blob/2924ca229b/src/SignalR/server/SignalR/src/SignalRDependencyInjectionExtensions.cs">SignalRDependencyInjectionExtensions.cs</a></p><ul><li><strong>AddSignalR</strong> : 添加SignalR服务</li><li><strong>AddHubOptions</strong> : 设置Signal配置，通过HubOptions自定义配置</li></ul><blockquote><p>映射终端</p></blockquote><p>文件位置：<a href="https://github.com/dotnet/aspnetcore/blob/2924ca229b/src/SignalR/server/SignalR/src/HubEndpointRouteBuilderExtensions.cs">HubEndpointRouteBuilderExtensions.cs</a></p><ul><li><strong>MapHub</strong> : 设置SignalR默认映射路由路径</li></ul><blockquote><p>初始化</p></blockquote><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ConfigureServices</span>(<span class="params">IServiceCollection services</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    services.AddSignalR();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Configure</span>(<span class="params">IApplicationBuilder app, IWebHostEnvironment env</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">    app.UseEndpoints(endpoints =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        endpoints.MapHub&lt;SignalMethod&gt;();<span class="comment">//设置路由规则</span></span><br><span class="line">    &#125;);</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="gRPC的路由解析服务"><a href="#gRPC的路由解析服务" class="headerlink" title="gRPC的路由解析服务"></a>gRPC的路由解析服务</h3><blockquote><p>注册服务</p></blockquote><p>文件位置：<a href="https://github.com/grpc/grpc-dotnet/blob/v2.40.0/src/Grpc.AspNetCore.Server/GrpcServiceExtensions.cs">GrpcServiceExtensions.cs</a></p><ul><li><strong>AddGrpc</strong> : 注册Grpc服务端服务</li><li><strong>AddServiceOptions</strong> : 设置Grpc服务端配置</li></ul><p>文件位置：<a href="https://github.com/grpc/grpc-dotnet/blob/v2.40.0/src/Grpc.Net.ClientFactory/GrpcClientServiceExtensions.cs">GrpcClientServiceExtensions.cs</a></p><ul><li><strong>AddGrpcClient</strong> : 注册Grpc客户端服务</li></ul><p>文件位置：<a href="https://github.com/grpc/grpc-dotnet/blob/v2.40.0/src/Grpc.Net.ClientFactory/GrpcHttpClientBuilderExtensions.cs">GrpcHttpClientBuilderExtensions.cs</a></p><ul><li><strong>ConfigureChannel</strong> : 设置Grpc客户端的通道信息</li></ul><blockquote><p>映射终端</p></blockquote><p>文件位置：<a href="https://github.com/grpc/grpc-dotnet/blob/v2.40.0/src/Grpc.AspNetCore.Server/GrpcEndpointRouteBuilderExtensions.cs">GrpcEndpointRouteBuilderExtensions.cs</a></p><ul><li><strong>MapGrpcService</strong> : 设置Grpc服务端默认映射路由路径</li></ul><blockquote><p>服务端初始化</p></blockquote><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ConfigureServices</span>(<span class="params">IServiceCollection services</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    services.AddGrpc();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Configure</span>(<span class="params">IApplicationBuilder app, IWebHostEnvironment env</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">    app.UseEndpoints(endpoints =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        endpoints.MapGrpcService&lt;GreeterService&gt;();<span class="comment">//设置路由规则</span></span><br><span class="line">    &#125;);</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>客户端初始化</p></blockquote><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ConfigureServices</span>(<span class="params">IServiceCollection services</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    services.AddGrpcClient&lt;Greeter.GreeterClient&gt;(o =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        o.Address = <span class="keyword">new</span> Uri(<span class="string">&quot;https://localhost:5001&quot;</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">    .ConfigureChannel(o=&gt;&#123;</span><br><span class="line">        o.Credentials = <span class="keyword">new</span> CustomCredentials();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;WebHost对象概念解释&quot;&gt;&lt;a href=&quot;#WebHost对象概念解释&quot; class=&quot;headerlink&quot; title=&quot;WebHost对象概念解释&quot;&gt;&lt;/a&gt;WebHost对象概念解释&lt;/h2&gt;&lt;p&gt;WebHost&lt;/p&gt;
&lt;blockquote&gt;
&lt;</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term=".NET" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NET/"/>
    
    <category term="AspNetCore" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NET/AspNetCore/"/>
    
    
    <category term="AspNetCore" scheme="https://blog.chobon.top/tags/AspNetCore/"/>
    
    <category term=".NET" scheme="https://blog.chobon.top/tags/NET/"/>
    
  </entry>
  
  <entry>
    <title>前端项目工程</title>
    <link href="https://blog.chobon.top/posts/64f8c07b/"/>
    <id>https://blog.chobon.top/posts/64f8c07b/</id>
    <published>2021-09-18T05:20:58.000Z</published>
    <updated>2025-10-05T13:49:10.353Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>刚入门前端，没有搭建过大型前端项目工程，觉得模块间引用很不方便，于是研究了下</p><h2 id="工程项目结构"><a href="#工程项目结构" class="headerlink" title="工程项目结构"></a>工程项目结构</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">react-ts-ui/</span><br><span class="line">├─ packages/</span><br><span class="line">├ ├─ react-components-a/</span><br><span class="line">├ ├ ├─ src/</span><br><span class="line">├ ├ ├ └─ index.tsx</span><br><span class="line">├ ├ ├─ package.json</span><br><span class="line">├ ├ └─ tsconfig.json</span><br><span class="line">├ └─ react-components-b/</span><br><span class="line">├   ├─ src/</span><br><span class="line">├   ├ └─ index.tsx</span><br><span class="line">├   ├─ package.json</span><br><span class="line">├   └─ tsconfig.json</span><br><span class="line">├─ src/</span><br><span class="line">├ └─ index.tsx</span><br><span class="line">├─ package.json</span><br><span class="line">└─ tsconfig.json</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="react-components-a"><a href="#react-components-a" class="headerlink" title="react-components-a"></a>react-components-a</h3><blockquote><p>.&#x2F;packages&#x2F;react-components-a&#x2F;tsconfig.json</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    <span class="attr">&quot;composite&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="react-components-b"><a href="#react-components-b" class="headerlink" title="react-components-b"></a>react-components-b</h3><blockquote><p>.&#x2F;packages&#x2F;react-components-b&#x2F;tsconfig.json</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    <span class="attr">&quot;composite&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="react-ts-ui"><a href="#react-ts-ui" class="headerlink" title="react-ts-ui"></a>react-ts-ui</h3><blockquote><p>.&#x2F;package.json</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//...</span></span><br><span class="line"><span class="attr">&quot;private&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;workspace&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;packages/*&quot;</span><span class="punctuation">]</span></span><br><span class="line"><span class="comment">//...</span></span><br></pre></td></tr></table></figure><blockquote><p>.&#x2F;tsconfig.json</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    <span class="attr">&quot;baseUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;paths&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;react-components-a&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;./packages/react-components-a/src&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;react-components-b&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;./packages/react-components-b/src&quot;</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;references&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./packages/react-components-a&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./packages/react-components-b&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><blockquote><p>.&#x2F;webpack.config.js</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="comment">//...</span></span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    <span class="attr">alias</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;react-components-a&#x27;</span>: path.<span class="title function_">resolve</span>(__dirname,<span class="string">&#x27;packages/react-components-a/src&#x27;</span>),</span><br><span class="line">      <span class="string">&#x27;react-components-b&#x27;</span>: path.<span class="title function_">resolve</span>(__dirname,<span class="string">&#x27;packages/react-components-b/src&#x27;</span>),</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><blockquote><p>packages&#x2F;react-components-a&#x2F;src&#x2F;index.tsx</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">componentsA</span>(<span class="params"></span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;react-components-a&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123;</span><br><span class="line">  componentsA</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>packages&#x2F;react-components-b&#x2F;src&#x2F;index.tsx</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">componentsB</span>(<span class="params"></span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;react-components-b&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123;</span><br><span class="line">  componentsB</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>src&#x2F;index.tsx</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; componentsA &#125; <span class="keyword">from</span> <span class="string">&quot;react-components-a&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; componentsB &#125; <span class="keyword">from</span> <span class="string">&quot;react-components-b&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_">componentsA</span>();</span><br><span class="line"><span class="title function_">componentsB</span>();</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;刚入门前端，没有搭建过大型前端项目工程，觉得模块间引用很不方便，于是研究了下&lt;/p&gt;
&lt;h2 id=&quot;工程项目结构&quot;&gt;&lt;a href=&quot;#工</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="前端" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="React" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF/React/"/>
    
    <category term="Typescript" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF/Typescript/"/>
    
    <category term="Webpack" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF/Webpack/"/>
    
    
    <category term="前端" scheme="https://blog.chobon.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="React" scheme="https://blog.chobon.top/tags/React/"/>
    
    <category term="Typescript" scheme="https://blog.chobon.top/tags/Typescript/"/>
    
    <category term="Webpack" scheme="https://blog.chobon.top/tags/Webpack/"/>
    
  </entry>
  
  <entry>
    <title>Typescript+React+Webpack整合</title>
    <link href="https://blog.chobon.top/posts/69aa5e6/"/>
    <id>https://blog.chobon.top/posts/69aa5e6/</id>
    <published>2021-09-14T11:33:58.000Z</published>
    <updated>2025-10-05T13:49:10.351Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p><a href="https://www.typescriptlang.org/">Typescript</a>TypeScript是一种由微软开发的开源、跨平台的编程语言。 他是JavaScript的超集，而且本质上向这个语言添加了可选的静态类型和基于类的面向对象编程，遵循最新的ES5、ES6规范。</p><p><a href="https://reactjs.org/">React</a>是一个用于构建用户界面的JavaScript库，起源于 Facebook 的内部项目，用来架设 Instagram 的网站，并于 2013 年 5 月开源。React拥有较高的性能，代码逻辑非常简单，越来越多的人已开始关注和使用它。</p><p><a href="https://webpack.js.org/">Webpack</a>是当前前端最热门的前端资源模块化管理和打包工具</p><h2 id="项目初始化"><a href="#项目初始化" class="headerlink" title="项目初始化"></a>项目初始化</h2><blockquote><p>初始化项目结构</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> react-ts-ui</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> react-ts-ui</span><br></pre></td></tr></table></figure><p>Typescript文件会放在src文件夹里，通过TypeScript编译器编译，然后经webpack处理，最后生成一个bundle.js文件放在dist目录下。 我们自定义的组件将会放在 src&#x2F;components文件夹下。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> src</span><br><span class="line"><span class="built_in">cd</span> src</span><br><span class="line"><span class="built_in">mkdir</span> components</span><br><span class="line"><span class="built_in">cd</span> ..</span><br></pre></td></tr></table></figure><blockquote><p>项目结构</p></blockquote><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">react-ts-ui/</span><br><span class="line">├─ dist/</span><br><span class="line">└─ src/</span><br><span class="line">  └─ components/</span><br></pre></td></tr></table></figure><blockquote><p>初始化工程</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// ./react-ts-ui</span><br><span class="line">npm init</span><br></pre></td></tr></table></figure><h2 id="Typescript"><a href="#Typescript" class="headerlink" title="Typescript"></a>Typescript</h2><blockquote><p>安装<code>Typescript</code>依赖</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add -D typescript awesome-typescript-loader source-map-loader</span><br></pre></td></tr></table></figure><blockquote><p>在根目录下创建<code>tsconfig.json</code>文件</p></blockquote><p><a href="https://www.tslang.cn/docs/handbook/tsconfig-json.html">这里</a>可以查看<code>tsconfig</code>文件详细说明</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;outDir&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./dist/&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sourceMap&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;noImplicitAny&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;module&quot;</span><span class="punctuation">:</span> <span class="string">&quot;commonjs&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;target&quot;</span><span class="punctuation">:</span> <span class="string">&quot;es6&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;jsx&quot;</span><span class="punctuation">:</span> <span class="string">&quot;react&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;include&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;./src/**/*&quot;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="React"><a href="#React" class="headerlink" title="React"></a>React</h2><blockquote><p>安装<code>React</code>依赖</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add react react-dom @types/react @types/react-dom</span><br></pre></td></tr></table></figure><blockquote><p>编写<code>React</code>组件</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> interface <span class="title class_">HelloProps</span> &#123; <span class="attr">compiler</span>: string; <span class="attr">framework</span>: string; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Hello</span> = (<span class="params">props: HelloProps</span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello from &#123;props.compiler&#125; and &#123;props.framework&#125;!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br></pre></td></tr></table></figure><blockquote><p>接下来在<code>src</code>文件下创建<code>index.tsx</code>文件</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="title class_">ReactDOM</span> <span class="keyword">from</span> <span class="string">&quot;react-dom&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Hello</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./components/Hello&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Hello</span> <span class="attr">compiler</span>=<span class="string">&quot;TypeScript&quot;</span> <span class="attr">framework</span>=<span class="string">&quot;React&quot;</span> /&gt;</span></span>,</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;example&quot;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><blockquote><p>在根目录下创建<code>index.html</code>文件</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Hello React!<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;example&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- Main --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./dist/bundle.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Webpack"><a href="#Webpack" class="headerlink" title="Webpack"></a>Webpack</h2><blockquote><p>安装<code>Webpack</code>依赖</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -g webpack</span><br></pre></td></tr></table></figure><blockquote><p>在根目录下创建<code>webpack.config.js</code>文件</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//webpack.config.js</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">entry</span>: <span class="string">&quot;./src/index.tsx&quot;</span>,</span><br><span class="line">    <span class="attr">output</span>: &#123;</span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&quot;bundle.js&quot;</span>,</span><br><span class="line">        <span class="attr">path</span>: __dirname + <span class="string">&quot;/dist&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Enable sourcemaps for debugging webpack&#x27;s output.</span></span><br><span class="line">    <span class="attr">devtool</span>: <span class="string">&quot;source-map&quot;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="attr">resolve</span>: &#123;</span><br><span class="line">        <span class="comment">// Add &#x27;.ts&#x27; and &#x27;.tsx&#x27; as resolvable extensions.</span></span><br><span class="line">        <span class="attr">extensions</span>: [<span class="string">&quot;.ts&quot;</span>, <span class="string">&quot;.tsx&quot;</span>, <span class="string">&quot;.js&quot;</span>, <span class="string">&quot;.json&quot;</span>]</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="attr">module</span>: &#123;</span><br><span class="line">        <span class="attr">rules</span>: [</span><br><span class="line">            <span class="comment">// All files with a &#x27;.ts&#x27; or &#x27;.tsx&#x27; extension will be handled by &#x27;awesome-typescript-loader&#x27;.</span></span><br><span class="line">            &#123; <span class="attr">test</span>: <span class="regexp">/\.tsx?$/</span>, <span class="attr">loader</span>: <span class="string">&quot;awesome-typescript-loader&quot;</span> &#125;,</span><br><span class="line"></span><br><span class="line">            <span class="comment">// All output &#x27;.js&#x27; files will have any sourcemaps re-processed by &#x27;source-map-loader&#x27;.</span></span><br><span class="line">            &#123; <span class="attr">enforce</span>: <span class="string">&quot;pre&quot;</span>, <span class="attr">test</span>: <span class="regexp">/\.js$/</span>, <span class="attr">loader</span>: <span class="string">&quot;source-map-loader&quot;</span> &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>需要注意一点我们是从node_modules引入的文件。 React和React-DOM的npm包里包含了独立的 .js文件，你可以在页面上引入它们，这里我们为了快捷就直接引用了。 可以随意地将它们拷贝到其它目录下，或者从CDN上引用。</p><ul><li>awesome-typescript-loader<ul><li>可以让Webpack使用TypeScript的标准配置文件 tsconfig.json编译TypeScript代码。<a href="https://www.npmjs.com/package/awesome-typescript-loader">npm_url</a></li></ul></li><li>source-map-loader<ul><li>使用TypeScript输出的sourcemap文件来告诉webpack何时生成 自己的sourcemaps。 这就允许你在调试最终生成的文件时就好像在调试TypeScript源码一样。<a href="https://www.npmjs.com/package/source-map-loader">npm_url</a></li></ul></li></ul><p>如果有css文件需要打包就需要引用以下两个包</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//webpack.config.js</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    <span class="attr">module</span>: &#123;</span><br><span class="line">            <span class="attr">rules</span>: [</span><br><span class="line">                <span class="comment">// All files with a &#x27;.ts&#x27; or &#x27;.tsx&#x27; extension will be handled by &#x27;awesome-typescript-loader&#x27;.</span></span><br><span class="line">                &#123; <span class="attr">test</span>: <span class="regexp">/\.tsx?$/</span>, <span class="attr">loader</span>: <span class="string">&quot;awesome-typescript-loader&quot;</span> &#125;,</span><br><span class="line"></span><br><span class="line">                <span class="comment">// All output &#x27;.js&#x27; files will have any sourcemaps re-processed by &#x27;source-map-loader&#x27;.</span></span><br><span class="line">                &#123; <span class="attr">enforce</span>: <span class="string">&quot;pre&quot;</span>, <span class="attr">test</span>: <span class="regexp">/\.js$/</span>, <span class="attr">loader</span>: <span class="string">&quot;source-map-loader&quot;</span> &#125;,</span><br><span class="line"></span><br><span class="line">                &#123; <span class="attr">test</span>: <span class="regexp">/\.css$/</span>,<span class="attr">use</span>: [<span class="string">&#x27;style-loader&#x27;</span>,<span class="string">&#x27;css-loader&#x27;</span>] &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br></pre></td></tr></table></figure><ul><li>css-loader<ul><li>用于将css文件打包到js文件中。<a href="https://www.npmjs.com/package/css-loader">npm_url</a></li></ul></li><li>style-loader<ul><li>将打包进js文件的css插入页面中。<a href="https://www.npmjs.com/package/style-loader">npm_url</a></li></ul></li></ul><h3 id="配置本地服务器"><a href="#配置本地服务器" class="headerlink" title="配置本地服务器"></a>配置本地服务器</h3><p><a href="https://github.com/webpack/webpack-dev-server">webpack-dev-server</a>是一个小型的node.js Express服务器,它使用webpack-dev-middleware中间件来为通过webpack打包生成的资源文件提供Web服务。</p><blockquote><p>全局安装<code>webpack-dev-server</code></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -g webpack-dev-server</span><br></pre></td></tr></table></figure><blockquote><p>修改<code>webpack.config.js</code>配置文件</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//webpack.config.js</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">devServer</span>:&#123;</span><br><span class="line">        <span class="attr">open</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">port</span>: <span class="number">9000</span>,</span><br><span class="line">        <span class="attr">static</span>:&#123;</span><br><span class="line">            <span class="attr">directory</span>:__dirname</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><blockquote><p>启动服务器</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">webpack serve</span><br></pre></td></tr></table></figure><h3 id="创建站点页面"><a href="#创建站点页面" class="headerlink" title="创建站点页面"></a>创建站点页面</h3><p><a href="https://github.com/jantimon/html-webpack-plugin">html-webpack-plugin</a>简化了 HTML 文件的创建，以便为你的 webpack 包提供服务。这对于那些文件名中包含哈希值，并且哈希值会随着每次编译而改变的 webpack 包特别有用。你可以让该插件为你生成一个 HTML 文件，使用 lodash 模板提供模板，或者使用你自己的 loader。</p><blockquote><p>安装插件包</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add -D html-webpack-plugin</span><br></pre></td></tr></table></figure><blockquote><p>修改<code>webpack.config.js</code>配置文件</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//webpack.config.js</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">HtmlWebpackPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;html-webpack-plugin&#x27;</span>);</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">plugins</span>: [</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">HtmlWebpackPlugin</span>(&#123;</span><br><span class="line"><span class="attr">template</span>: <span class="string">&#x27;index.html&#x27;</span>,<span class="comment">//选择的模板</span></span><br><span class="line"><span class="attr">filename</span>: <span class="string">&#x27;index.html&#x27;</span>,<span class="comment">//指定创建的html文件名</span></span><br><span class="line">&#125;)</span><br><span class="line">],</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="热加载"><a href="#热加载" class="headerlink" title="热加载"></a>热加载</h3><blockquote><p>修改<code>webpack.config.js</code>配置文件</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> webpack = <span class="built_in">require</span>(<span class="string">&#x27;webpack&#x27;</span>);</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line"><span class="attr">plugins</span>:[</span><br><span class="line"><span class="comment">//...</span></span><br><span class="line">        <span class="keyword">new</span> webpack.<span class="title class_">HotModuleReplacementPlugin</span>()</span><br><span class="line">    ]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable language_">module</span>.<span class="property">hot</span>) &#123;</span><br><span class="line">    <span class="variable language_">module</span>.<span class="property">hot</span>.<span class="title function_">accept</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Cannot apply HMR update.&#x27;</span>, err);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;Typescript&lt;/a&gt;TypeScript是一种由</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="前端" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="React" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF/React/"/>
    
    <category term="Typescript" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF/Typescript/"/>
    
    <category term="Webpack" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF/Webpack/"/>
    
    
    <category term="前端" scheme="https://blog.chobon.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="React" scheme="https://blog.chobon.top/tags/React/"/>
    
    <category term="Typescript" scheme="https://blog.chobon.top/tags/Typescript/"/>
    
    <category term="Webpack" scheme="https://blog.chobon.top/tags/Webpack/"/>
    
  </entry>
  
  <entry>
    <title>初试Storybook</title>
    <link href="https://blog.chobon.top/posts/c45b6c49/"/>
    <id>https://blog.chobon.top/posts/c45b6c49/</id>
    <published>2021-09-14T05:24:58.000Z</published>
    <updated>2025-10-05T13:49:10.353Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p><a href="https://storybook.js.org/">StoryBook</a>,独立开发构建前端UI插件、页面的开源工具。可用于Vue、React、Angular的UI组件</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>本例是采用React作为开发框架</p><h3 id="自动安装"><a href="#自动安装" class="headerlink" title="自动安装"></a>自动安装</h3><h4 id="初始化React-App"><a href="#初始化React-App" class="headerlink" title="初始化React-App"></a>初始化React-App</h4><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># </span><br><span class="line">npx create-react-app react-app</span><br><span class="line"></span><br><span class="line">cd react-app</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://img.chobon.top/blog/storybook/react-app.png" alt="React-App初始界面"></p><h4 id="初始化SotryBook"><a href="#初始化SotryBook" class="headerlink" title="初始化SotryBook"></a>初始化SotryBook</h4><ul><li>全局安装storybook</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add -g sb</span><br></pre></td></tr></table></figure><ul><li>局部安装storybook</li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add sb</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 添加storybook</span><br><span class="line">npx sb init</span><br><span class="line"></span><br><span class="line"># 在开发模式中启动storybook</span><br><span class="line">yarn storybook</span><br></pre></td></tr></table></figure><p><img src="https://img.chobon.top/blog/storybook/example-welcome.png" alt="storybook欢迎界面"></p><h4 id="初始化数据"><a href="#初始化数据" class="headerlink" title="初始化数据"></a>初始化数据</h4><blockquote><p>新增两个文件夹</p></blockquote><ul><li><code>.storybook</code></li></ul><p>存放storybook的配置文件，main.js、preview.js</p><ul><li><code>src/stories</code></li></ul><p>存放展示组件和数据，storybook初始化Button、Header、Page展示用</p><h3 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h3><p>创建项目文件夹react-app并npm初始化</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir react-app</span><br><span class="line"></span><br><span class="line">cd react-app</span><br></pre></td></tr></table></figure><p>添加react相关包</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add -D react react-dom</span><br></pre></td></tr></table></figure><p>添加storybook的react包</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add -D <span class="meta">@storybook</span>/react</span><br></pre></td></tr></table></figure><p>在根目录下增加<code>.storybook</code>文件夹，并创建main.js文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// .storybook/main.js</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">stories</span>: [<span class="string">&#x27;../**/*.stories.[tj]sx&#x27;</span>],</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在根目录下增加stories文件夹，文件内是作为storybook的数据和展示代码，直接从自动生成的文件拷贝过来就可以了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://storybook.js.org/&quot;&gt;StoryBook&lt;/a&gt;,独立开发构建前端UI插件、页面的开源工具</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="前端" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="React" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF/React/"/>
    
    
    <category term="前端" scheme="https://blog.chobon.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="React" scheme="https://blog.chobon.top/tags/React/"/>
    
    <category term="Storybook" scheme="https://blog.chobon.top/tags/Storybook/"/>
    
  </entry>
  
  <entry>
    <title>Task的底层实现</title>
    <link href="https://blog.chobon.top/posts/d8b3a72c/"/>
    <id>https://blog.chobon.top/posts/d8b3a72c/</id>
    <published>2021-09-09T04:30:33.000Z</published>
    <updated>2025-10-05T13:49:10.351Z</updated>
    
    <content type="html"><![CDATA[<h2 id="async关键字"><a href="#async关键字" class="headerlink" title="async关键字"></a>async关键字</h2><p>我们将<code>async</code>修饰的方法叫做“异步方法”，但是并不意味着方法是异步执行，也不意味着该方法是异步方法。</p><blockquote><p>源码</p></blockquote><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">async</span> Task <span class="title">MethodAsync</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">await</span> Task.Run(()=&gt;Console.WriteLine(<span class="string">&quot;asynchronous run&quot;</span>));</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;synchronous run&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>反编译代码</p></blockquote><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">sealed</span> <span class="keyword">class</span> &lt;<span class="title">MethodAsync</span>&gt;<span class="title">d__1</span> : <span class="title">IAsyncStateMachine</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> &lt;&gt;<span class="number">1</span>__state;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> AsyncTaskMethodBuilder &lt;&gt;t__builder;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TaskAwaiter &lt;&gt;u__1;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">MoveNext</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> num = &lt;&gt;<span class="number">1</span>__state;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            TaskAwaiter awaiter;</span><br><span class="line">            <span class="keyword">if</span> (num != <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                awaiter = Task.Run(&lt;&gt;c.&lt;&gt;<span class="number">9</span>__1_0 ?? (&lt;&gt;c.&lt;&gt;<span class="number">9</span>__1_0 = <span class="keyword">new</span> Action(&lt;&gt;c.&lt;&gt;<span class="number">9.</span>&lt;MethodAsync&gt;b__1_0))).GetAwaiter();</span><br><span class="line">                <span class="keyword">if</span> (!awaiter.IsCompleted)</span><br><span class="line">                &#123;</span><br><span class="line">                    num = (&lt;&gt;<span class="number">1</span>__state = <span class="number">0</span>);</span><br><span class="line">                    &lt;&gt;u__1 = awaiter;</span><br><span class="line">                    &lt;MethodAsync&gt;d__1 stateMachine = <span class="keyword">this</span>;</span><br><span class="line">                    &lt;&gt;t__builder.AwaitUnsafeOnCompleted(<span class="keyword">ref</span> awaiter, <span class="keyword">ref</span> stateMachine);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                awaiter = &lt;&gt;u__1;</span><br><span class="line">                &lt;&gt;u__1 = <span class="literal">default</span>(TaskAwaiter);</span><br><span class="line">                num = (&lt;&gt;<span class="number">1</span>__state = <span class="number">-1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            awaiter.GetResult();</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;synchronous run&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception exception)</span><br><span class="line">        &#123;</span><br><span class="line">            &lt;&gt;<span class="number">1</span>__state = <span class="number">-2</span>;</span><br><span class="line">            &lt;&gt;t__builder.SetException(exception);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        &lt;&gt;<span class="number">1</span>__state = <span class="number">-2</span>;</span><br><span class="line">        &lt;&gt;t__builder.SetResult();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> IAsyncStateMachine.MoveNext()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//ILSpy generated this explicit interface implementation from .override directive in MoveNext</span></span><br><span class="line">        <span class="keyword">this</span>.MoveNext();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">DebuggerHidden</span>]</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">SetStateMachine</span>(<span class="params">IAsyncStateMachine stateMachine</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> IAsyncStateMachine.SetStateMachine(IAsyncStateMachine stateMachine)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//ILSpy generated this explicit interface implementation from .override directive in SetStateMachine</span></span><br><span class="line">        <span class="keyword">this</span>.SetStateMachine(stateMachine);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[<span class="meta">AsyncStateMachine(typeof(&lt;MethodAsync&gt;d__1))</span>]</span><br><span class="line">[<span class="meta">DebuggerStepThrough</span>]</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Task <span class="title">MethodAsync</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    &lt;MethodAsync&gt;d__1 stateMachine = <span class="keyword">new</span> &lt;MethodAsync&gt;d__1();</span><br><span class="line">    stateMachine.&lt;&gt;t__builder = AsyncTaskMethodBuilder.Create();</span><br><span class="line">    stateMachine.&lt;&gt;<span class="number">1</span>__state = <span class="number">-1</span>;</span><br><span class="line">    stateMachine.&lt;&gt;t__builder.Start(<span class="keyword">ref</span> stateMachine);</span><br><span class="line">    <span class="keyword">return</span> stateMachine.&lt;&gt;t__builder.Task;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过上面的<code>反编译代码</code>可以看出，只要被async修饰的方法都会生成状态机<code>IAsyncStateMachine</code>的实现和一个操作状态机的同名方法，状态机内部逻辑由<code>AsyncTaskMethodBuilder</code>控制，至于是否是异步取决于方法内有没有<code>await</code>修饰。</p><h2 id="await关键字"><a href="#await关键字" class="headerlink" title="await关键字"></a>await关键字</h2><p>await关键字会被编译器生成TaskAwaiter去接收异步方法的Task，负责后续与状态机交互，最终Task会被交给ThreadPool执行和调度。</p><blockquote><p>TaskAwaiter</p></blockquote><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">MoveNext</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> num = &lt;&gt;<span class="number">1</span>__state;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        TaskAwaiter awaiter;</span><br><span class="line">        <span class="keyword">if</span> (num != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            awaiter = Task.Run(&lt;&gt;c.&lt;&gt;<span class="number">9</span>__1_0 ?? (&lt;&gt;c.&lt;&gt;<span class="number">9</span>__1_0 = <span class="keyword">new</span> Action(&lt;&gt;c.&lt;&gt;<span class="number">9.</span>&lt;MethodAsync&gt;b__1_0))).GetAwaiter();</span><br><span class="line">            <span class="keyword">if</span> (!awaiter.IsCompleted)</span><br><span class="line">            &#123;</span><br><span class="line">                num = (&lt;&gt;<span class="number">1</span>__state = <span class="number">0</span>);</span><br><span class="line">                &lt;&gt;u__1 = awaiter;</span><br><span class="line">                &lt;MethodAsync&gt;d__1 stateMachine = <span class="keyword">this</span>;</span><br><span class="line">                &lt;&gt;t__builder.AwaitUnsafeOnCompleted(<span class="keyword">ref</span> awaiter, <span class="keyword">ref</span> stateMachine);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            awaiter = &lt;&gt;u__1;</span><br><span class="line">            &lt;&gt;u__1 = <span class="literal">default</span>(TaskAwaiter);</span><br><span class="line">            num = (&lt;&gt;<span class="number">1</span>__state = <span class="number">-1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        awaiter.GetResult();</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;synchronous run&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception exception)</span><br><span class="line">    &#123;</span><br><span class="line">        &lt;&gt;<span class="number">1</span>__state = <span class="number">-2</span>;</span><br><span class="line">        &lt;&gt;t__builder.SetException(exception);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    &lt;&gt;<span class="number">1</span>__state = <span class="number">-2</span>;</span><br><span class="line">    &lt;&gt;t__builder.SetResult();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="异步状态机-IAsyncStateMachine"><a href="#异步状态机-IAsyncStateMachine" class="headerlink" title="异步状态机(IAsyncStateMachine)"></a>异步状态机(IAsyncStateMachine)</h2><blockquote><p>IAsyncStateMachine接口</p></blockquote><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IAsyncStateMachine</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">// Summary:</span></span><br><span class="line">    <span class="comment">//     Moves the state machine to its next state.</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">MoveNext</span>()</span>;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">// Summary:</span></span><br><span class="line">    <span class="comment">//     Configures the state machine with a heap-allocated replica.</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">// Parameters:</span></span><br><span class="line">    <span class="comment">//   stateMachine:</span></span><br><span class="line">    <span class="comment">//     The heap-allocated replica.</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">SetStateMachine</span>(<span class="params">IAsyncStateMachine stateMachine</span>)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一旦<code>AsyncTaskMethodBuilder</code>执行<code>Start</code>方法，状态机就会开始启用。状态机通过<code>MoveNext</code>方法来管理状态，状态机第一次调用<code>MoveNext</code>方法,会检查Awaiter是否已完成，没有完成则交由ThreadPool来调度，然后改变状态值等待ThreadPool通知，一旦Task完成，状态机第二次执行<code>MoveNext</code>方法，最终会调用<code>SetResult</code>方法拿到结果，执行剩下代码，状态机结束。</p><p><strong>异步状态机实现原理</strong><br><img src="https://img.chobon.top/blog/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/StateMachine.png" alt="异步状态机"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>Task底层是用了ThreadPool实现异步，简化了异步编程。不要在同步方法前用async修饰，会增加无端性能浪费。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;async关键字&quot;&gt;&lt;a href=&quot;#async关键字&quot; class=&quot;headerlink&quot; title=&quot;async关键字&quot;&gt;&lt;/a&gt;async关键字&lt;/h2&gt;&lt;p&gt;我们将&lt;code&gt;async&lt;/code&gt;修饰的方法叫做“异步方法”，但是并不意味着方法是异</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term=".NET" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NET/"/>
    
    <category term="异步编程" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NET/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term=".NET" scheme="https://blog.chobon.top/tags/NET/"/>
    
    <category term="异步编程" scheme="https://blog.chobon.top/tags/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>基于任务异步编程模式（TAP）</title>
    <link href="https://blog.chobon.top/posts/32e0f934/"/>
    <id>https://blog.chobon.top/posts/32e0f934/</id>
    <published>2021-09-08T09:23:46.000Z</published>
    <updated>2025-10-05T13:49:10.353Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>TAP是基于Task的异步编程设计模式,</p><h2 id="异步编程"><a href="#异步编程" class="headerlink" title="异步编程"></a>异步编程</h2><ul><li><strong>async</strong> : async关键字修饰的方法都会被视为异步方法，编译器会为方法生成一个对应的状态机</li><li><strong>await</strong> : await关键字后面代表可等待方法，编译器会转化成TaskAwait去处理异步</li></ul><blockquote><p>async修饰符代表了这个方法是异步方法，编译器会生成状态机。</p></blockquote><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">MethodAsync</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//do some thing</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//可等待方法，clr会挂起，等异步方法执行完才会执行剩下的逻辑</span></span><br><span class="line">    <span class="keyword">await</span> Method1Async();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//do some thing</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="异步取消"><a href="#异步取消" class="headerlink" title="异步取消"></a>异步取消</h3><blockquote><p>采用CancellationToken来管理整个取消逻辑</p></blockquote><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">CancellationTokenSource source = <span class="keyword">new</span> CancellationTokenSource();</span><br><span class="line">CancellationToken token = source.Token;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">var</span> result <span class="keyword">await</span> <span class="title">MethodAsync</span>(<span class="params">token</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//外部取消</span></span><br><span class="line">source.Cancel();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">MethodAsync</span>(<span class="params">CancellationToken token</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//内部取消</span></span><br><span class="line">    source.Cancel();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="TAP转换APM"><a href="#TAP转换APM" class="headerlink" title="TAP转换APM"></a>TAP转换APM</h2><blockquote><p>采用TaskCompletionSource</p></blockquote><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Task&lt;<span class="built_in">int</span>&gt; <span class="title">ReadTask</span>(<span class="params"><span class="keyword">this</span> Stream stream, <span class="built_in">byte</span>[] buffer, <span class="built_in">int</span> offset, <span class="built_in">int</span> count, <span class="built_in">object</span> state</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> tcs = <span class="keyword">new</span> TaskCompletionSource&lt;<span class="built_in">int</span>&gt;();</span><br><span class="line">    stream.BeginRead(buffer, offset, count, ar =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span> </span><br><span class="line">        &#123; </span><br><span class="line">            tcs.SetResult(stream.EndRead(ar)); </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception exc) </span><br><span class="line">        &#123; </span><br><span class="line">            tcs.SetException(exc); </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, state);</span><br><span class="line">    <span class="keyword">return</span> tcs.Task;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>官方封装了工具类TaskToApm</p></blockquote><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Task转APM密封类</span></span><br><span class="line"><span class="keyword">internal</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="title">TaskAsyncResult</span>:<span class="title">IAsyncResult</span>&#123;...&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Task转成APM对应的Begin方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> IAsyncResult <span class="title">Begin</span>(<span class="params">Task task, AsyncCallback? callback, <span class="built_in">object</span>? state</span>)</span> =&gt;</span><br><span class="line">            <span class="keyword">new</span> TaskAsyncResult(task, state, callback);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> TResult <span class="title">End</span>&lt;<span class="title">TResult</span>&gt;(<span class="params">IAsyncResult asyncResult</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (GetTask(asyncResult) <span class="keyword">is</span> Task&lt;TResult&gt; task)</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">return</span> task.GetAwaiter().GetResult();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      ThrowArgumentException(asyncResult);</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">default</span>!; <span class="comment">// unreachable</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//转换后的Begin方法使用</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">BeginMethod</span>(<span class="params">AsyncCallback callback,<span class="built_in">object</span>? </span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    TaskToApm.Begin(MethodAsync(),callback,<span class="literal">null</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>TAP已经让异步编程无感了，就像正常的方法一样，不用再关心如何去处理结果。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;TAP是基于Task的异步编程设计模式,&lt;/p&gt;
&lt;h2 id=&quot;异步编程&quot;&gt;&lt;a href=&quot;#异步编程&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term=".NET" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NET/"/>
    
    <category term="异步编程" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NET/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term=".NET" scheme="https://blog.chobon.top/tags/NET/"/>
    
    <category term="异步编程" scheme="https://blog.chobon.top/tags/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>基于事件异步编程模式（EAP）</title>
    <link href="https://blog.chobon.top/posts/f25b3530/"/>
    <id>https://blog.chobon.top/posts/f25b3530/</id>
    <published>2021-09-07T08:23:46.000Z</published>
    <updated>2025-10-05T13:49:10.353Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>EAP，全称Event-based Asynchronous Pattern，基于事件的异步模式，它提供了一系列的事件声明与方法，用于实现异步模式的各个阶段。</p><p>典型的内置组件为BackgroundWorker组件，本文中我们将使用它来探寻此种模式的执行过程。</p><h2 id="异步模型"><a href="#异步模型" class="headerlink" title="异步模型"></a>异步模型</h2><p>相较于APM的复杂性，基于事件异步编程（EAP）简化了编程，并可以方便得在异步方法过程中通过增加事件来回调，与主线程交互。</p><p>基于事件的异步模式的功能</p><ul><li>支持取消</li><li>支持IsBusy属性</li><li>支持完成通知</li><li>支持进度报告</li><li>支持返回增量结果</li></ul><p>官方提供了<code>AsyncCompletedEventArgs</code>、<code>ProgressChangedEventArgs</code>等基础事件参数，可以直接使用或者继承使用，以及<code>AsyncOperation</code>、<code>AsyncOperationManager</code>操作线程上下文的帮助类</p><p>官方给出一个简单的组件<a href="https://docs.microsoft.com/zh-cn/dotnet/api/system.componentmodel.backgroundworker">System.ComponentModel.BackgroundWorker</a></p><h2 id="如何实现异步"><a href="#如何实现异步" class="headerlink" title="如何实现异步"></a>如何实现异步</h2><ul><li>[<em><code>MethodName</code></em>]<strong>Async</strong></li><li>[<em><code>MethodName</code></em>]<strong>Completed</strong></li><li>[<em><code>MethodName</code></em>]<strong>CancelAsync</strong></li><li><strong>EventArgs</strong></li></ul><h3 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h3><blockquote><p>异步方法</p></blockquote><p>对于同步方法创建对应的异步方法，以Async结尾。</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//同步方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Method</span>(<span class="params"><span class="built_in">string</span> param, <span class="built_in">object</span> userState</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//do some thing</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//异步方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">MethodAsync</span>(<span class="params"><span class="built_in">string</span> param, <span class="built_in">object</span> userState</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//do some thing</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>异步完成方法</p></blockquote><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//完成事件委托声明</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="keyword">void</span> <span class="title">MethodCompletedEventHandler</span>(<span class="params"><span class="built_in">object</span> sender, MethodCompletedEventArgs e</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//完成事件参数类，继承自AsyncCompletedEventArgs，如果没有其它属性，直接父类本身即可</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MethodCompletedEventArgs</span> : <span class="title">System.ComponentModel.AsyncCompletedEventArgs</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> MyReturnType Result &#123; <span class="keyword">get</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//对外提供完成事件绑定</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">event</span> MethodCompletedEventHandler MethodCompleted;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//通知外部绑定完成事件</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">OnMethodCompleted</span>(<span class="params">MethodCompletedEventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(MethodCompleted != <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      MethodCompleted(<span class="keyword">this</span>,e)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>进度更新和增量结果</p></blockquote><p>通常以ProgressChanged结尾，<code>ProgressChangedEventArgs</code>是相对应得事件参数</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//更新事件处理委托声明</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="keyword">void</span> <span class="title">ProgressChangedEventHandler</span>(<span class="params">ProgressChangedEventArgs e</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//对外提供更新事件绑定</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">event</span> MethodProgressChangeEventHandler MethodProgressChanged;</span><br><span class="line"></span><br><span class="line"><span class="comment">//通知外部绑定更新事件</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">OnMethodProgressChanged</span>(<span class="params">ProgressChangedEventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(MethodProgressChanged != <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      MethodProgressChanged(e)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>相对应的取消方法</p></blockquote><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//类中具有多个异步操作</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">MethodCancelAsync</span>(<span class="params"><span class="built_in">object</span> userState</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//do some thing</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//整个类中具有一个异步操作</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">CancelAsync</span>(<span class="params"><span class="built_in">object</span> userState</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//do some thing</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="线程处理和上下文"><a href="#线程处理和上下文" class="headerlink" title="线程处理和上下文"></a>线程处理和上下文</h3><p>同步方法最终是通过WorkerEventHandler委托方法执行，而<a href="https://docs.microsoft.com/zh-cn/dotnet/standard/asynchronous-programming-patterns/asynchronous-programming-using-delegates">委托底层</a>是采用线程池来执行。方法执行完再用AsyncOperation通知主线程或UI线程</p><p><em><strong>注意：.NET Core已经不支持委托异步调用，EAP底层由Task承接异步操作</strong></em></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过委托来执行同步方法</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="built_in">delegate</span> <span class="keyword">void</span> <span class="title">WorkerEventHandler</span>(<span class="params">AsyncOperation asyncOp</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> SendOrPostCallback onProgressChangeDelegate = <span class="keyword">new</span> SendOrPostCallback(MethodProgressChange);</span><br><span class="line"><span class="keyword">private</span> SendOrPostCallback onCompletedDelegate = <span class="keyword">new</span> SendOrPostCallback(MethodComplete);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Method</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//do some thing</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">MethodWoker</span>(<span class="params">AsyncOperation asyncOp</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    Method();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//通过AsyncOperation.Post，触发更新异步传递主线程或UI线程</span></span><br><span class="line">    asyncOp.Post(<span class="keyword">this</span>.onProgressChangeDelegate);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// do some thing</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//执行完成后操作</span></span><br><span class="line">    <span class="keyword">this</span>.CompletionMethod(asyncOp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//触发当前线程更新事件，</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">MethodProgressChange</span>(<span class="params"><span class="built_in">object</span> state</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> e = state <span class="keyword">as</span> ProgressChangedEventArgs;</span><br><span class="line">    OnMethodProgressChanged(e);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//异步后续完成逻辑</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CompletionMethod</span>(<span class="params">AsyncOperation asyncOp</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> e = <span class="keyword">new</span> MethodCompletedEventArgs();</span><br><span class="line">    <span class="comment">//由AsyncOperation完成后通知主线程或UI线程</span></span><br><span class="line">    asyncOp.PostOperationCompleted(onCompletedDelegate,e);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//触发当前线程完成事件</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">MethodComplete</span>(<span class="params"><span class="built_in">object</span> operationState</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> e = <span class="function">operationState <span class="keyword">as</span> MethodCompletedEventArgs</span></span><br><span class="line"><span class="function">    <span class="title">OnMethodCompleted</span>(<span class="params">e</span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">MethodAsync</span>()</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//do some thing</span></span><br><span class="line"></span><br><span class="line">    AsyncOperation asyncOp = AsyncOperationManager.CreateOperation();</span><br><span class="line"></span><br><span class="line">    WorkerEventHandler work = <span class="keyword">new</span> WorkerEventHandler(MethodWoker);</span><br><span class="line"></span><br><span class="line">    work.BeginInvoke(asyncOp);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//do some thing</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>相较于APM的编程，EAP逻辑思维上更顺畅和丝滑，虽然底层都是用委托来实现异步，没有APM那么晦涩难懂，但是编码量还是不少。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;EAP，全称Event-based Asynchronous Pattern，基于事件的异步模式，它提供了一系列的事件声明与方法，用于实现异</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term=".NET" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NET/"/>
    
    <category term="异步编程" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NET/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term=".NET" scheme="https://blog.chobon.top/tags/NET/"/>
    
    <category term="异步编程" scheme="https://blog.chobon.top/tags/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>ASP.NET Core MVC 源码解读-应用程序模型</title>
    <link href="https://blog.chobon.top/posts/c29cb869/"/>
    <id>https://blog.chobon.top/posts/c29cb869/</id>
    <published>2021-04-16T08:09:52.000Z</published>
    <updated>2025-10-05T13:49:10.349Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p><a href="#">ASP.NET Core MVC</a> 会定义一个 应用程序模型，用于表示 MVC 应用的各个组件。 读取并处理此模型，以修改 MVC 元素的行为方式。 默认情况下，MVC 遵循特定的约定来确定哪些类被视为控制器、这些类上的哪些方法是操作以及参数和路由的行为方式。 自定义此行为以满足应用程序的需求，方法是创建自定义约定，并将其作为全局或特性应用。</p><h2 id="模型-Model-和程序提供器-Provider"><a href="#模型-Model-和程序提供器-Provider" class="headerlink" title="模型(Model)和程序提供器(Provider)"></a>模型(Model)和程序提供器(Provider)</h2><blockquote><p>对象模型(Model)</p></blockquote><p><a href="#">ASP.NET Core MVC</a> 应用程序模型包括用于描述 MVC 应用程序的抽象接口和具体实现类。 此模型是 MVC 根据默认约定发现应用的控制器、操作、操作参数、路由和筛选器的结果。 通过使用应用程序模型，修改应用以遵循默认 MVC 行为中的不同约定。 参数、名称、路由和筛选器都用作操作和控制器的配置数据。<br>ASP.NET Core MVC 应用程序模型具有以下结构：</p><ul><li>ApplicationModel<ul><li>控制器 (ControllerModel)<ul><li>属性 (PropertyModel)</li></ul></li><li>操作 (ActionModel)</li><li>参数 (ParameterModel)</li></ul></li></ul><blockquote><p>程序提供器(IApplicationModelProvider)</p></blockquote><ul><li>IApplicationModelProvider<ul><li>默认提供器 (DefaultApplicationModelProvider)</li><li>权限相关提供器 (AuthorizationApplicationModelProvider)</li><li>跨域相关提供器 (CorsApplicationModelProvider)</li></ul></li></ul><p><code>DefaultApplicationModelProvider</code> 建立了由 ASP.NET Core MVC 使用的许多默认行为。 其职责包括：</p><ul><li>将全局筛选器添加到上下文</li><li>将控制器添加到上下文</li><li>将公共控制器方法作为操作添加</li><li>将操作方法参数添加到上下文</li><li>应用路由和其他属性</li></ul><p><code>AuthorizationApplicationModelProvider</code> 负责应用与 AuthorizeFilter 和 AllowAnonymousFilter 属性关联的行为。</p><p><code>CorsApplicationModelProvider</code> 与和关联的实现 IEnableCorsAttribute 行为 IDisableCorsAttribute 。</p><h2 id="约定-Convention"><a href="#约定-Convention" class="headerlink" title="约定(Convention)"></a>约定(Convention)</h2><p>应用程序模型定义了约定抽象，通过约定抽象来自定义模型行为比重写整个模型或提供程序更简单。 建议使用这些抽象方法修改应用的行为。 约定提供一种方法来编写动态应用自定义项的代码。 尽管 筛选器 提供了修改框架行为的方法，但自定义允许控制整个应用程序的工作方式。</p><p>可用约定如下：</p><ul><li>IApplicationModelConvention</li><li>IControllerModelConvention</li><li>IActionModelConvention</li><li>IParameterModelConvention</li></ul><h2 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h2><p><a href="#">ASP.NET Core MVC</a> 使用接口定义的提供程序模式加载应用程序模型 IApplicationModelProvider 。 此部分介绍此提供程序的工作原理的一些内部实现细节。 使用提供程序模式是一种高级主题，主要用于框架使用。 大多数应用程序应使用约定，而不是提供程序模式。</p><p>IApplicationModelProvider接口有两个方法OnProvidersExecuting和OnProvidersExecuted以及属性Order。</p><p>接口的每个实现OnProvidersExecuting方法基于其属性Order以升序调用。然后，按照相反的顺序调用OnProvidersExecuted方法。</p><p>首先(Order&#x3D;-1000):</p><ul><li><code>DefaultApplicationModelProvider</code></li></ul><p>然后(Order&#x3D;-990):</p><ul><li><code>AuthorizationApplicationModelProvider</code></li><li><code>CorsApplicationModelProvider</code></li></ul><p>最后(Order&#x3D;-900):</p><ul><li><code>ApiBehaviorApplicationModelProvider</code> 执行约定，</li></ul><p>ApplicationModelFactory对象内有IApplicationModelProvider数组和IApplicationModelConvention集合。统一构建ApplicationModel、ControllerModel、ActionModel、ParameterModel等对象</p><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><blockquote><p>修改ApplicationModel</p></blockquote><p>以下约定用于向应用程序模型添加属性：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Mvc.ApplicationModels;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">AppModelSample.Conventions</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ApplicationDescription</span> : <span class="title">IApplicationModelConvention</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">readonly</span> <span class="built_in">string</span> _description;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ApplicationDescription</span>(<span class="params"><span class="built_in">string</span> description</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            _description = description;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Apply</span>(<span class="params">ApplicationModel application</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            application.Properties[<span class="string">&quot;description&quot;</span>] = _description;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当在中添加 MVC 时，应用程序模型约定作为选项应用 Startup.ConfigureServices ：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ConfigureServices</span>(<span class="params">IServiceCollection services</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    services.AddMvc(options =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        options.Conventions.Add(<span class="keyword">new</span> ApplicationDescription(<span class="string">&quot;My Application Description&quot;</span>));</span><br><span class="line">        options.Conventions.Add(<span class="keyword">new</span> NamespaceRoutingConvention());</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>修改 ControllerModel 说明</p></blockquote><p>控制器模型还可以包含自定义属性。 自定义属性将覆盖在应用程序模型中指定的同名的现有属性。 以下约定属性可在控制器级别添加说明：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Mvc.ApplicationModels;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">AppModelSample.Conventions</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ControllerDescriptionAttribute</span> : <span class="title">Attribute</span>, <span class="title">IControllerModelConvention</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">readonly</span> <span class="built_in">string</span> _description;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ControllerDescriptionAttribute</span>(<span class="params"><span class="built_in">string</span> description</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            _description = description;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Apply</span>(<span class="params">ControllerModel controllerModel</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            controllerModel.Properties[<span class="string">&quot;description&quot;</span>] = _description;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此约定作为控制器上的属性应用：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">ControllerDescription(<span class="string">&quot;Controller Description&quot;</span>)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DescriptionAttributesController</span> : <span class="title">Controller</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">Index</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Description: &quot;</span> + ControllerContext.ActionDescriptor.Properties[<span class="string">&quot;description&quot;</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>修改 ActionModel 说明</p></blockquote><p>可以将单独的特性约定应用于单个操作，重写已应用于应用程序或控制器级别的行为：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Mvc.ApplicationModels;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">AppModelSample.Conventions</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ActionDescriptionAttribute</span> : <span class="title">Attribute</span>, <span class="title">IActionModelConvention</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">readonly</span> <span class="built_in">string</span> _description;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ActionDescriptionAttribute</span>(<span class="params"><span class="built_in">string</span> description</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            _description = description;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Apply</span>(<span class="params">ActionModel actionModel</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            actionModel.Properties[<span class="string">&quot;description&quot;</span>] = _description;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>修改 ParameterModel</p></blockquote><p>可将以下约定应用于操作参数，以修改其 BindingInfo。 以下约定要求参数是路由参数。 其他可能的绑定源（如查询字符串值）将被忽略：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Mvc.ApplicationModels;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Mvc.ModelBinding;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">AppModelSample.Conventions</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MustBeInRouteParameterModelConvention</span> : <span class="title">Attribute</span>, <span class="title">IParameterModelConvention</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Apply</span>(<span class="params">ParameterModel model</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (model.BindingInfo == <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                model.BindingInfo = <span class="keyword">new</span> BindingInfo();</span><br><span class="line">            &#125;</span><br><span class="line">            model.BindingInfo.BindingSource = BindingSource.Path;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该属性可应用于任何操作参数：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ParameterModelController</span> : <span class="title">Controller</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Will bind:  /ParameterModel/GetById/123</span></span><br><span class="line">    <span class="comment">// WON&#x27;T bind: /ParameterModel/GetById?id=123</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">GetById</span>(<span class="params">[MustBeInRouteParameterModelConvention]<span class="built_in">int</span> id</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">$&quot;Bound to id: <span class="subst">&#123;id&#125;</span>&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>若要将约定应用于所有操作参数，请将添加 MustBeInRouteParameterModelConvention 到 MvcOptions 中的 Startup.ConfigureServices ：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">options.Conventions.Add(<span class="keyword">new</span> MustBeInRouteParameterModelConvention());</span><br></pre></td></tr></table></figure><blockquote><p>修改 ActionModel 名称</p></blockquote><p>以下约定可修改 ActionModel，以更新其应用到的操作的 名称。 新名称以参数形式提供给该属性。 路由使用此新名称，因此它会影响用于访问此操作方法的路由：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Mvc.ApplicationModels;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">AppModelSample.Conventions</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CustomActionNameAttribute</span> : <span class="title">Attribute</span>, <span class="title">IActionModelConvention</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">readonly</span> <span class="built_in">string</span> _actionName;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">CustomActionNameAttribute</span>(<span class="params"><span class="built_in">string</span> actionName</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            _actionName = actionName;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Apply</span>(<span class="params">ActionModel actionModel</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// this name will be used by routing</span></span><br><span class="line">            actionModel.ActionName = _actionName;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此属性应用于 HomeController 中的操作方法：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Route: /Home/MyCoolAction</span></span><br><span class="line">[<span class="meta">CustomActionName(<span class="string">&quot;MyCoolAction&quot;</span>)</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">SomeName</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> ControllerContext.ActionDescriptor.ActionName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>即使方法名称为 SomeName，该属性也会覆盖 MVC 使用该方法名称的约定，并将操作名称替换为 MyCoolAction。 因此，用于访问此操作的路由为 &#x2F;Home&#x2F;MyCoolAction。官方提供了类似功能的特性 ActionNameAttribute 。</p><blockquote><p>自定义路由约定</p></blockquote><p>使用 IApplicationModelConvention 自定义路由的工作方式。 例如，以下约定将控制器的命名空间合并到它们的路由中，并将命名空间中的替换为 . &#x2F; 路由：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Mvc.ApplicationModels;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">AppModelSample.Conventions</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">NamespaceRoutingConvention</span> : <span class="title">IApplicationModelConvention</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Apply</span>(<span class="params">ApplicationModel application</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="keyword">var</span> controller <span class="keyword">in</span> application.Controllers)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">var</span> hasAttributeRouteModels = controller.Selectors</span><br><span class="line">                    .Any(selector =&gt; selector.AttributeRouteModel != <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (!hasAttributeRouteModels</span><br><span class="line">                    &amp;&amp; controller.ControllerName.Contains(<span class="string">&quot;Namespace&quot;</span>)) <span class="comment">// affect one controller in this sample</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">// Replace the . in the namespace with a / to create the attribute route</span></span><br><span class="line">                    <span class="comment">// Ex: MySite.Admin namespace will correspond to MySite/Admin attribute route</span></span><br><span class="line">                    <span class="comment">// Then attach [controller], [action] and optional &#123;id?&#125; token.</span></span><br><span class="line">                    <span class="comment">// [Controller] and [action] is replaced with the controller and action</span></span><br><span class="line">                    <span class="comment">// name to generate the final template</span></span><br><span class="line">                    controller.Selectors[<span class="number">0</span>].AttributeRouteModel = <span class="keyword">new</span> AttributeRouteModel()</span><br><span class="line">                    &#123;</span><br><span class="line">                        Template = controller.ControllerType.Namespace.Replace(<span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;/&#x27;</span>) + <span class="string">&quot;/[controller]/[action]/&#123;id?&#125;&quot;</span></span><br><span class="line">                    &#125;;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// You can continue to put attribute route templates for the controller actions depending on the way you want them to behave</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此约定作为选项添加到 Startup.ConfigureServices ：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ConfigureServices</span>(<span class="params">IServiceCollection services</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    services.AddMvc(options =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        options.Conventions.Add(<span class="keyword">new</span> ApplicationDescription(<span class="string">&quot;My Application Description&quot;</span>));</span><br><span class="line">        options.Conventions.Add(<span class="keyword">new</span> NamespaceRoutingConvention());</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面的示例将约定应用于不使用属性路由的路由，其中控制器的 Namespace 名称如下所示：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Microsoft.AspNetCore.Mvc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">AppModelSample.Controllers</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">NamespaceRoutingController</span> : <span class="title">Controller</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// using NamespaceRoutingConvention</span></span><br><span class="line">        <span class="comment">// route: /AppModelSample/Controllers/NamespaceRouting/Index</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">Index</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;This demonstrates namespace routing.&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;#&quot;&gt;ASP.NET Core MVC&lt;/a&gt; 会定义一个 应用程序模型，用于表示 MVC 应用的各个组件。 读取并处理此</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term=".NET" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NET/"/>
    
    <category term="AspNetCore" scheme="https://blog.chobon.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/NET/AspNetCore/"/>
    
    
    <category term="AspNetCore" scheme="https://blog.chobon.top/tags/AspNetCore/"/>
    
    <category term=".NET" scheme="https://blog.chobon.top/tags/NET/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 16.04安装Nginx</title>
    <link href="https://blog.chobon.top/posts/c72d5e78/"/>
    <id>https://blog.chobon.top/posts/c72d5e78/</id>
    <published>2020-12-11T09:51:45.000Z</published>
    <updated>2025-10-05T13:49:10.352Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h2><p>Nginx发音的“engine x”是一个免费的开源高性能HTTP和反向代理服务器，负责处理互联网上一些最大的网站的负载。 本教程将概述在Ubuntu 16.04机器上安装和管理Nginx的步骤。</p><h2 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h2><p>Nginx的软件包在Ubuntu默认软件仓库中可用。 安装非常简单，只需键入以下命令：<br><code>sudo apt update</code><br><code>sudo apt install nginx</code></p><p>安装完成后，请检查Nginx服务状态和版本：</p><ul><li>服务状态</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">root@vultr:~# sudo systemctl status nginx</span><br><span class="line">● nginx.service - A high performance web server and a reverse proxy server</span><br><span class="line">   Loaded: loaded (/lib/systemd/system/nginx.service; enabled; vendor preset: enabled)</span><br><span class="line">   Active: active (running) since Sun 2020-11-08 18:11:00 CST; 13s ago</span><br><span class="line"> Main PID: 19268 (nginx)</span><br><span class="line">   CGroup: /system.slice/nginx.service</span><br><span class="line">           ├─19268 nginx: master process /usr/sbin/nginx -g daemon on; master_process on;</span><br><span class="line">           └─19269 nginx: worker process                           </span><br><span class="line"></span><br><span class="line">Nov 08 18:11:00 vultr.guest systemd[1]: Starting A high performance web server and a reverse proxy server...</span><br><span class="line">Nov 08 18:11:00 vultr.guest systemd[1]: nginx.service: Failed to parse PID from file /run/nginx.pid: Invalid argument</span><br><span class="line">Nov 08 18:11:00 vultr.guest systemd[1]: Started A high performance web server and a reverse proxy server.</span><br></pre></td></tr></table></figure><ul><li>版本</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@vultr:~# sudo nginx -v</span><br><span class="line">nginx version: nginx/1.10.3 (Ubuntu)</span><br></pre></td></tr></table></figure><h2 id="配置防火墙"><a href="#配置防火墙" class="headerlink" title="配置防火墙"></a>配置防火墙</h2><ul><li>如果您正在运行防火墙，则还需要打开端口80和443。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@vultr:~# sudo ufw allow &#x27;Nginx Full&#x27;</span><br><span class="line">Rules updated</span><br><span class="line">Rules updated (v6)</span><br></pre></td></tr></table></figure><ul><li>您可以通过以下方式验证更改：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@vultr:~# sudo ufw status</span><br><span class="line">Status: inactive</span><br></pre></td></tr></table></figure><ul><li>如果是显示inactive，说明未启用，启用即可</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">root@vultr:~# sudo ufw enable</span><br><span class="line">Command may disrupt existing ssh connections. Proceed with operation (y|n)? y</span><br><span class="line">Firewall is active and enabled on system startup</span><br><span class="line">root@vultr:~# sudo ufw status</span><br><span class="line">Status: active</span><br><span class="line"></span><br><span class="line">To                         Action      From</span><br><span class="line">--                         ------      ----</span><br><span class="line">Nginx Full                 ALLOW       Anywhere</span><br><span class="line">Nginx Full (v6)            ALLOW       Anywhere (v6)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="管理Nginx服务"><a href="#管理Nginx服务" class="headerlink" title="管理Nginx服务"></a>管理Nginx服务</h2><ul><li>您可以像任何其他systemd单位一样管理Nginx服务。 要停止Nginx服务，请运行：</li></ul><p><code>sudo systemctl stop nginx</code></p><ul><li>要再次启动，请键入：</li></ul><p><code>sudo systemctl start nginx</code></p><ul><li>重新启动Nginx服务：</li></ul><p><code>sudo systemctl restart nginx</code></p><ul><li>在进行一些配置更改后重新加载Nginx服务：</li></ul><p><code>$</code>sudo systemctl reload nginx&#96;</p><ul><li>如果你想禁用Nginx服务在启动时启动：</li></ul><p><code>$</code>sudo systemctl disable nginx&#96;</p><ul><li>并重新启用它：</li></ul><p><code>$</code>sudo systemctl enable nginx&#96;</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Nginx&quot;&gt;&lt;a href=&quot;#Nginx&quot; class=&quot;headerlink&quot; title=&quot;Nginx&quot;&gt;&lt;/a&gt;Nginx&lt;/h2&gt;&lt;p&gt;Nginx发音的“engine x”是一个免费的开源高性能HTTP和反向代理服务器，负责处理互联网上一些最大的网站的</summary>
      
    
    
    
    <category term="Linux" scheme="https://blog.chobon.top/categories/Linux/"/>
    
    <category term="Ubuntu" scheme="https://blog.chobon.top/categories/Linux/Ubuntu/"/>
    
    
    <category term="Ubuntu" scheme="https://blog.chobon.top/tags/Ubuntu/"/>
    
    <category term="Nginx" scheme="https://blog.chobon.top/tags/Nginx/"/>
    
  </entry>
  
</feed>
